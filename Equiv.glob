DIGEST bbb7dc7087d2a06a9e25cba22e363f22
FPLF.Equiv
R141:144 PLF.Maps <> <> lib
R171:179 Coq.Bool.Bool <> <> lib
R206:216 Coq.Arith.Arith <> <> lib
R243:250 Coq.Init.Nat <> <> lib
R277:290 Coq.Arith.PeanoNat <> <> lib
R300:302 Coq.Arith.PeanoNat Nat <> mod
R329:339 Coq.Arith.EqNat <> <> lib
R366:368 Coq.micromega.Lia <> <> lib
R395:404 Coq.Lists.List <> <> lib
R414:426 Coq.Lists.List ListNotations <> mod
R453:482 Coq.Logic.FunctionalExtensionality <> <> lib
R509:511 PLF.Imp <> <> lib
def 4311:4316 <> aequiv
R4327:4330 PLF.Imp <> aexp ind
binder 4319:4320 <> a1:1
binder 4322:4323 <> a2:2
R4358:4362 PLF.Imp <> state def
binder 4353:4354 <> st:3
R4381:4383 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4370:4374 PLF.Imp <> aeval def
R4376:4377 PLF.Equiv <> st:3 var
R4379:4380 PLF.Equiv <> a1:1 var
R4384:4388 PLF.Imp <> aeval def
R4390:4391 PLF.Equiv <> st:3 var
R4393:4394 PLF.Equiv <> a2:2 var
def 4409:4414 <> bequiv
R4425:4428 PLF.Imp <> bexp ind
binder 4417:4418 <> b1:4
binder 4420:4421 <> b2:5
R4456:4460 PLF.Imp <> state def
binder 4451:4452 <> st:6
R4479:4481 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4468:4472 PLF.Imp <> beval def
R4474:4475 PLF.Equiv <> st:6 var
R4477:4478 PLF.Equiv <> b1:4 var
R4482:4486 PLF.Imp <> beval def
R4488:4489 PLF.Equiv <> st:6 var
R4491:4492 PLF.Equiv <> b2:5 var
prf 4601:4614 <> aequiv_example
R4619:4624 PLF.Equiv <> aequiv def
R4630:4632 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4638:4640 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4634:4636 PLF.Imp <> :com::x_'-'_x not
R4633:4633 PLF.Imp <> X def
R4637:4637 PLF.Imp <> X def
R4646:4648 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4650:4652 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
prf 4703:4716 <> bequiv_example
R4721:4726 PLF.Equiv <> bequiv def
R4732:4734 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4744:4746 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4740:4742 PLF.Imp <> :com::x_'='_x not
R4736:4738 PLF.Imp <> :com::x_'-'_x not
R4735:4735 PLF.Imp <> X def
R4739:4739 PLF.Imp <> X def
R4752:4754 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4759:4761 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4755:4758 PLF.Imp <> :com::'true' not
R4791:4795 PLF.Imp <> beval def
R4808:4821 PLF.Equiv <> aequiv_example thm
R4808:4821 PLF.Equiv <> aequiv_example thm
R4808:4821 PLF.Equiv <> aequiv_example thm
def 5519:5524 <> cequiv
R5535:5537 PLF.Imp <> com ind
binder 5527:5528 <> c1:7
binder 5530:5531 <> c2:8
R5569:5573 PLF.Imp <> state def
binder 5560:5561 <> st:9
binder 5563:5565 <> st':10
R5581:5581 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5598:5604 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5621:5621 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5584:5587 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5590:5594 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5588:5589 PLF.Equiv <> c1:7 var
R5582:5583 PLF.Equiv <> st:9 var
R5595:5597 PLF.Equiv <> st':10 var
R5607:5610 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5613:5617 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5611:5612 PLF.Equiv <> c2:8 var
R5605:5606 PLF.Equiv <> st:9 var
R5618:5620 PLF.Equiv <> st':10 var
def 5636:5642 <> refines
R5653:5655 PLF.Imp <> com ind
binder 5645:5646 <> c1:11
binder 5648:5649 <> c2:12
R5687:5691 PLF.Imp <> state def
binder 5678:5679 <> st:13
binder 5681:5683 <> st':14
R5699:5699 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5716:5721 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5738:5738 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5702:5705 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5708:5712 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5706:5707 PLF.Equiv <> c1:11 var
R5700:5701 PLF.Equiv <> st:13 var
R5713:5715 PLF.Equiv <> st':14 var
R5724:5727 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5730:5734 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5728:5729 PLF.Equiv <> c2:12 var
R5722:5723 PLF.Equiv <> st:13 var
R5735:5737 PLF.Equiv <> st':14 var
prf 5976:5984 <> skip_left
binder 5995:5995 <> c:15
R6000:6005 PLF.Equiv <> cequiv def
R6011:6013 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R6021:6023 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R6018:6019 PLF.Imp <> :com:com_scope:x_';'_x not
R6014:6017 PLF.Imp <> :com:com_scope:'skip' not
R6020:6020 PLF.Equiv <> c:15 var
R6029:6029 PLF.Equiv <> c:15 var
R6202:6206 PLF.Imp <> E_Seq constr
R6202:6206 PLF.Imp <> E_Seq constr
R6227:6232 PLF.Imp <> E_Skip constr
R6227:6232 PLF.Imp <> E_Skip constr
prf 6404:6413 <> skip_right
binder 6424:6424 <> c:16
R6429:6434 PLF.Equiv <> cequiv def
R6440:6442 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R6451:6453 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R6444:6446 PLF.Imp <> :com:com_scope:x_';'_x not
R6443:6443 PLF.Equiv <> c:16 var
R6447:6450 PLF.Imp <> :com:com_scope:'skip' not
R6459:6459 PLF.Equiv <> c:16 var
R6568:6572 PLF.Imp <> E_Seq constr
R6568:6572 PLF.Imp <> E_Seq constr
R6616:6621 PLF.Imp <> E_Skip constr
R6616:6621 PLF.Imp <> E_Skip constr
prf 6731:6744 <> if_true_simple
binder 6755:6756 <> c1:17
binder 6758:6759 <> c2:18
R6764:6769 PLF.Equiv <> cequiv def
R6775:6777 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R6805:6807 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R6778:6780 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6785:6790 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6793:6798 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6801:6804 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6781:6784 PLF.Imp <> :com::'true' not
R6791:6792 PLF.Equiv <> c1:17 var
R6799:6800 PLF.Equiv <> c2:18 var
R6813:6814 PLF.Equiv <> c1:17 var
R6945:6952 PLF.Imp <> E_IfTrue constr
R6945:6952 PLF.Imp <> E_IfTrue constr
prf 8883:8889 <> if_true
binder 8899:8899 <> b:19
binder 8901:8902 <> c1:20
binder 8904:8905 <> c2:21
R8927:8933 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8910:8915 PLF.Equiv <> bequiv def
R8917:8917 PLF.Equiv <> b:19 var
R8919:8920 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R8925:8926 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R8921:8924 PLF.Imp <> :com::'true' not
R8934:8939 PLF.Equiv <> cequiv def
R8945:8947 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R8972:8974 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R8948:8950 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R8952:8957 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R8960:8965 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R8968:8971 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R8951:8951 PLF.Equiv <> b:19 var
R8958:8959 PLF.Equiv <> c1:20 var
R8966:8967 PLF.Equiv <> c2:21 var
R8980:8981 PLF.Equiv <> c1:20 var
R9180:9185 PLF.Equiv <> bequiv def
R9274:9281 PLF.Imp <> E_IfTrue constr
R9274:9281 PLF.Imp <> E_IfTrue constr
R9311:9316 PLF.Equiv <> bequiv def
prf 9436:9443 <> if_false
binder 9454:9454 <> b:22
binder 9456:9457 <> c1:23
binder 9459:9460 <> c2:24
R9483:9488 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9465:9470 PLF.Equiv <> bequiv def
R9472:9472 PLF.Equiv <> b:22 var
R9474:9475 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9481:9482 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9476:9480 PLF.Imp <> :com::'false' not
R9489:9494 PLF.Equiv <> cequiv def
R9500:9502 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9527:9529 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9503:9505 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9507:9512 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9515:9520 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9523:9526 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9506:9506 PLF.Equiv <> b:22 var
R9513:9514 PLF.Equiv <> c1:23 var
R9521:9522 PLF.Equiv <> c2:24 var
R9535:9536 PLF.Equiv <> c2:24 var
R9621:9626 PLF.Equiv <> bequiv def
R9709:9714 PLF.Equiv <> bequiv def
R9742:9750 PLF.Imp <> E_IfFalse constr
R9742:9750 PLF.Imp <> E_IfFalse constr
prf 9961:9976 <> swap_if_branches
binder 9987:9987 <> b:25
binder 9989:9990 <> c1:26
binder 9992:9993 <> c2:27
R9998:10003 PLF.Equiv <> cequiv def
R10009:10011 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10036:10038 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10012:10014 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10016:10021 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10024:10029 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10032:10035 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10015:10015 PLF.Equiv <> b:25 var
R10022:10023 PLF.Equiv <> c1:26 var
R10030:10031 PLF.Equiv <> c2:27 var
R10044:10046 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10073:10075 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10047:10049 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10053:10058 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10061:10066 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10069:10072 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10050:10051 PLF.Imp <> :com::'~'_x not
R10052:10052 PLF.Equiv <> b:25 var
R10059:10060 PLF.Equiv <> c2:27 var
R10067:10068 PLF.Equiv <> c1:26 var
R10137:10145 PLF.Imp <> E_IfFalse constr
R10137:10145 PLF.Imp <> E_IfFalse constr
R10227:10234 PLF.Imp <> E_IfTrue constr
R10227:10234 PLF.Imp <> E_IfTrue constr
R10345:10353 PLF.Imp <> E_IfFalse constr
R10345:10353 PLF.Imp <> E_IfFalse constr
R10375:10379 PLF.Imp <> beval def
R10375:10379 PLF.Imp <> beval def
R10479:10486 PLF.Imp <> E_IfTrue constr
R10479:10486 PLF.Imp <> E_IfTrue constr
R10508:10512 PLF.Imp <> beval def
R10508:10512 PLF.Imp <> beval def
prf 10946:10956 <> while_false
binder 10967:10967 <> b:28
binder 10969:10969 <> c:29
R10992:10997 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10974:10979 PLF.Equiv <> bequiv def
R10981:10981 PLF.Equiv <> b:28 var
R10983:10984 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10990:10991 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10985:10989 PLF.Imp <> :com::'false' not
R10998:11003 PLF.Equiv <> cequiv def
R11009:11011 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11028:11030 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11012:11017 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R11019:11022 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R11024:11027 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R11018:11018 PLF.Equiv <> b:28 var
R11023:11023 PLF.Equiv <> c:29 var
R11036:11038 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11043:11045 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11039:11042 PLF.Imp <> :com:com_scope:'skip' not
R11163:11168 PLF.Imp <> E_Skip constr
R11163:11168 PLF.Imp <> E_Skip constr
R11280:11291 PLF.Imp <> E_WhileFalse constr
R11280:11291 PLF.Imp <> E_WhileFalse constr
prf 12676:12693 <> while_true_nonterm
binder 12704:12704 <> b:30
binder 12706:12706 <> c:31
binder 12708:12709 <> st:32
binder 12711:12713 <> st':33
R12735:12740 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12718:12723 PLF.Equiv <> bequiv def
R12725:12725 PLF.Equiv <> b:30 var
R12727:12728 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R12733:12734 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R12729:12732 PLF.Imp <> :com::'true' not
R12741:12743 Coq.Init.Logic <> ::type_scope:'~'_x not
R12774:12775 Coq.Init.Logic <> ::type_scope:'~'_x not
R12746:12749 PLF.Imp <> :::x_'=['_x_']=>'_x not
R12766:12770 PLF.Imp <> :::x_'=['_x_']=>'_x not
R12750:12755 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R12757:12760 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R12762:12765 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R12756:12756 PLF.Equiv <> b:30 var
R12761:12761 PLF.Equiv <> c:31 var
R12744:12745 PLF.Equiv <> st:32 var
R12771:12773 PLF.Equiv <> st':33 var
R12856:12858 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R12875:12877 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R12859:12864 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R12866:12869 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R12871:12874 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R12856:12858 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R12875:12877 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R12859:12864 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R12866:12869 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R12871:12874 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13152:13157 PLF.Equiv <> bequiv def
prf 13708:13717 <> while_true
binder 13728:13728 <> b:34
binder 13730:13730 <> c:35
R13752:13758 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13735:13740 PLF.Equiv <> bequiv def
R13742:13742 PLF.Equiv <> b:34 var
R13744:13745 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13750:13751 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13746:13749 PLF.Imp <> :com::'true' not
R13759:13764 PLF.Equiv <> cequiv def
R13770:13772 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13789:13791 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13773:13778 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13780:13783 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13785:13788 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13779:13779 PLF.Equiv <> b:34 var
R13784:13784 PLF.Equiv <> c:35 var
R13797:13799 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13822:13824 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13800:13805 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13810:13813 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13818:13821 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13806:13809 PLF.Imp <> :com::'true' not
R13814:13817 PLF.Imp <> :com:com_scope:'skip' not
R13876:13893 PLF.Equiv <> while_true_nonterm thm
R13876:13893 PLF.Equiv <> while_true_nonterm thm
R14023:14040 PLF.Equiv <> while_true_nonterm thm
R14042:14046 PLF.Imp <> BTrue constr
R14048:14052 PLF.Imp <> CSkip constr
R14023:14040 PLF.Equiv <> while_true_nonterm thm
R14042:14046 PLF.Imp <> BTrue constr
R14048:14052 PLF.Imp <> CSkip constr
R14078:14083 PLF.Equiv <> bequiv def
prf 14427:14440 <> loop_unrolling
binder 14451:14451 <> b:36
binder 14453:14453 <> c:37
R14458:14463 PLF.Equiv <> cequiv def
R14469:14471 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14488:14490 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14472:14477 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14479:14482 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14484:14487 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14478:14478 PLF.Equiv <> b:36 var
R14483:14483 PLF.Equiv <> c:37 var
R14496:14498 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14543:14545 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14499:14501 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R14503:14508 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R14529:14534 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R14539:14542 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R14502:14502 PLF.Equiv <> b:36 var
R14510:14512 PLF.Imp <> :com:com_scope:x_';'_x not
R14509:14509 PLF.Equiv <> c:37 var
R14513:14518 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14520:14523 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14525:14528 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14519:14519 PLF.Equiv <> b:36 var
R14524:14524 PLF.Equiv <> c:37 var
R14535:14538 PLF.Imp <> :com:com_scope:'skip' not
R14701:14709 PLF.Imp <> E_IfFalse constr
R14701:14709 PLF.Imp <> E_IfFalse constr
R14730:14735 PLF.Imp <> E_Skip constr
R14730:14735 PLF.Imp <> E_Skip constr
R14772:14779 PLF.Imp <> E_IfTrue constr
R14772:14779 PLF.Imp <> E_IfTrue constr
R14806:14810 PLF.Imp <> E_Seq constr
R14806:14810 PLF.Imp <> E_Seq constr
R14956:14966 PLF.Imp <> E_WhileTrue constr
R14956:14966 PLF.Imp <> E_WhileTrue constr
R15092:15103 PLF.Imp <> E_WhileFalse constr
R15092:15103 PLF.Imp <> E_WhileFalse constr
prf 15195:15203 <> seq_assoc
binder 15214:15215 <> c1:38
binder 15217:15218 <> c2:39
binder 15220:15221 <> c3:40
R15226:15231 PLF.Equiv <> cequiv def
R15233:15234 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15245:15246 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15242:15242 PLF.Imp <> :com:com_scope:x_';'_x not
R15235:15235 PLF.Imp <> :com:com_scope:'('_x_')' not
R15241:15241 PLF.Imp <> :com:com_scope:'('_x_')' not
R15238:15238 PLF.Imp <> :com:com_scope:x_';'_x not
R15236:15237 PLF.Equiv <> c1:38 var
R15239:15240 PLF.Equiv <> c2:39 var
R15243:15244 PLF.Equiv <> c3:40 var
R15248:15249 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15260:15261 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15252:15252 PLF.Imp <> :com:com_scope:x_';'_x not
R15250:15251 PLF.Equiv <> c1:38 var
R15253:15253 PLF.Imp <> :com:com_scope:'('_x_')' not
R15259:15259 PLF.Imp <> :com:com_scope:'('_x_')' not
R15256:15256 PLF.Imp <> :com:com_scope:x_';'_x not
R15254:15255 PLF.Equiv <> c2:39 var
R15257:15258 PLF.Equiv <> c3:40 var
prf 15523:15541 <> identity_assignment
binder 15552:15552 <> x:41
R15557:15562 PLF.Equiv <> cequiv def
R15568:15570 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15577:15579 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15572:15575 PLF.Imp <> :com:com_scope:x_':='_x not
R15571:15571 PLF.Equiv <> x:41 var
R15576:15576 PLF.Equiv <> x:41 var
R15585:15587 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15592:15594 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15588:15591 PLF.Imp <> :com:com_scope:'skip' not
R15686:15698 PLF.Maps <> t_update_same prfax
R15686:15698 PLF.Maps <> t_update_same prfax
R15686:15698 PLF.Maps <> t_update_same prfax
R15711:15716 PLF.Imp <> E_Skip constr
R15711:15716 PLF.Imp <> E_Skip constr
R15752:15755 PLF.Imp <> :::x_'=['_x_']=>'_x not
R15762:15767 PLF.Imp <> :::x_'=['_x_']=>'_x not
R15785:15785 PLF.Imp <> :::x_'=['_x_']=>'_x not
R15757:15760 PLF.Imp <> :com:com_scope:x_':='_x not
R15769:15773 PLF.Maps <> :::x_'!->'_x_';'_x not
R15779:15781 PLF.Maps <> :::x_'!->'_x_';'_x not
R15752:15755 PLF.Imp <> :::x_'=['_x_']=>'_x not
R15762:15767 PLF.Imp <> :::x_'=['_x_']=>'_x not
R15785:15785 PLF.Imp <> :::x_'=['_x_']=>'_x not
R15757:15760 PLF.Imp <> :com:com_scope:x_':='_x not
R15769:15773 PLF.Maps <> :::x_'!->'_x_';'_x not
R15779:15781 PLF.Maps <> :::x_'!->'_x_';'_x not
R15801:15806 PLF.Imp <> E_Asgn constr
R15801:15806 PLF.Imp <> E_Asgn constr
R15836:15848 PLF.Maps <> t_update_same prfax
R15836:15848 PLF.Maps <> t_update_same prfax
R15836:15848 PLF.Maps <> t_update_same prfax
prf 15960:15972 <> assign_aequiv
R15988:15993 Coq.Strings.String <> string ind
binder 15984:15984 <> X:42
R16001:16004 PLF.Imp <> aexp ind
binder 15997:15997 <> a:43
R16026:16031 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16010:16015 PLF.Equiv <> aequiv def
R16017:16019 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16021:16023 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16020:16020 PLF.Equiv <> X:42 var
R16025:16025 PLF.Equiv <> a:43 var
R16032:16037 PLF.Equiv <> cequiv def
R16039:16041 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16046:16048 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16042:16045 PLF.Imp <> :com:com_scope:'skip' not
R16050:16052 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16059:16061 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16054:16057 PLF.Imp <> :com:com_scope:x_':='_x not
R16053:16053 PLF.Equiv <> X:42 var
R16058:16058 PLF.Equiv <> a:43 var
R16137:16142 PLF.Equiv <> aequiv def
R16173:16175 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16176:16183 PLF.Maps <> t_update def
R16173:16175 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16176:16183 PLF.Maps <> t_update def
R16214:16226 PLF.Maps <> t_update_same prfax
R16214:16226 PLF.Maps <> t_update_same prfax
R16214:16226 PLF.Maps <> t_update_same prfax
R16271:16276 PLF.Imp <> E_Asgn constr
R16271:16276 PLF.Imp <> E_Asgn constr
R16309:16314 PLF.Equiv <> aequiv def
R16349:16351 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16352:16359 PLF.Maps <> t_update def
R16367:16371 PLF.Imp <> aeval def
R16349:16351 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16352:16359 PLF.Maps <> t_update def
R16367:16371 PLF.Imp <> aeval def
R16416:16428 PLF.Maps <> t_update_same prfax
R16416:16428 PLF.Maps <> t_update_same prfax
R16416:16428 PLF.Maps <> t_update_same prfax
R16475:16480 PLF.Imp <> E_Skip constr
R16475:16480 PLF.Imp <> E_Skip constr
def 17086:17091 <> prog_a
R17095:17097 PLF.Imp <> com ind
R17104:17106 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17152:17154 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17107:17112 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17122:17132 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17143:17151 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17113:17113 PLF.Imp <> :com::'~'_x not
R17114:17114 PLF.Imp <> :com:com_scope:'('_x_')' not
R17121:17121 PLF.Imp <> :com:com_scope:'('_x_')' not
R17116:17119 PLF.Imp <> :com::x_'<='_x not
R17115:17115 PLF.Imp <> X def
R17134:17137 PLF.Imp <> :com:com_scope:x_':='_x not
R17133:17133 PLF.Imp <> X def
R17139:17141 PLF.Imp <> :com::x_'+'_x not
R17138:17138 PLF.Imp <> X def
def 17169:17174 <> prog_b
R17178:17180 PLF.Imp <> com ind
R17187:17189 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17301:17303 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17271:17277 PLF.Imp <> :com:com_scope:x_';'_x not
R17190:17192 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R17200:17212 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R17238:17255 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R17262:17270 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R17193:17193 PLF.Imp <> :com:com_scope:'('_x_')' not
R17199:17199 PLF.Imp <> :com:com_scope:'('_x_')' not
R17195:17197 PLF.Imp <> :com::x_'='_x not
R17194:17194 PLF.Imp <> X def
R17223:17231 PLF.Imp <> :com:com_scope:x_';'_x not
R17214:17217 PLF.Imp <> :com:com_scope:x_':='_x not
R17213:17213 PLF.Imp <> X def
R17219:17221 PLF.Imp <> :com::x_'+'_x not
R17218:17218 PLF.Imp <> X def
R17233:17236 PLF.Imp <> :com:com_scope:x_':='_x not
R17232:17232 PLF.Imp <> Y def
R17257:17260 PLF.Imp <> :com:com_scope:x_':='_x not
R17256:17256 PLF.Imp <> Y def
R17288:17294 PLF.Imp <> :com:com_scope:x_';'_x not
R17279:17282 PLF.Imp <> :com:com_scope:x_':='_x not
R17278:17278 PLF.Imp <> X def
R17284:17286 PLF.Imp <> :com::x_'-'_x not
R17283:17283 PLF.Imp <> X def
R17287:17287 PLF.Imp <> Y def
R17296:17299 PLF.Imp <> :com:com_scope:x_':='_x not
R17295:17295 PLF.Imp <> Y def
def 17318:17323 <> prog_c
R17327:17329 PLF.Imp <> com ind
R17336:17338 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17343:17345 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17339:17342 PLF.Imp <> :com:com_scope:'skip' not
def 17361:17366 <> prog_d
R17370:17372 PLF.Imp <> com ind
R17379:17381 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17430:17432 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17382:17387 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17394:17404 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17421:17429 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17389:17392 PLF.Imp <> :com::x_'<>'_x not
R17388:17388 PLF.Imp <> X def
R17406:17409 PLF.Imp <> :com:com_scope:x_':='_x not
R17405:17405 PLF.Imp <> X def
R17417:17419 PLF.Imp <> :com::x_'+'_x not
R17410:17410 PLF.Imp <> :com:com_scope:'('_x_')' not
R17416:17416 PLF.Imp <> :com:com_scope:'('_x_')' not
R17412:17414 PLF.Imp <> :com::x_'*'_x not
R17411:17411 PLF.Imp <> X def
R17415:17415 PLF.Imp <> Y def
def 17447:17452 <> prog_e
R17456:17458 PLF.Imp <> com ind
R17465:17467 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17474:17476 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17469:17472 PLF.Imp <> :com:com_scope:x_':='_x not
R17468:17468 PLF.Imp <> Y def
def 17491:17496 <> prog_f
R17500:17502 PLF.Imp <> com ind
R17509:17511 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17571:17573 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17522:17528 PLF.Imp <> :com:com_scope:x_';'_x not
R17513:17516 PLF.Imp <> :com:com_scope:x_':='_x not
R17512:17512 PLF.Imp <> Y def
R17518:17520 PLF.Imp <> :com::x_'+'_x not
R17517:17517 PLF.Imp <> X def
R17529:17534 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17541:17551 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17562:17570 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17536:17539 PLF.Imp <> :com::x_'<>'_x not
R17535:17535 PLF.Imp <> X def
R17540:17540 PLF.Imp <> Y def
R17553:17556 PLF.Imp <> :com:com_scope:x_':='_x not
R17552:17552 PLF.Imp <> Y def
R17558:17560 PLF.Imp <> :com::x_'+'_x not
R17557:17557 PLF.Imp <> X def
def 17588:17593 <> prog_g
R17597:17599 PLF.Imp <> com ind
R17606:17608 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17643:17645 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17609:17614 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17619:17629 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17634:17642 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17615:17618 PLF.Imp <> :com::'true' not
R17630:17633 PLF.Imp <> :com:com_scope:'skip' not
def 17660:17665 <> prog_h
R17669:17671 PLF.Imp <> com ind
R17678:17680 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17723:17725 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17681:17686 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17693:17703 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17714:17722 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17688:17691 PLF.Imp <> :com::x_'<>'_x not
R17687:17687 PLF.Imp <> X def
R17692:17692 PLF.Imp <> X def
R17705:17708 PLF.Imp <> :com:com_scope:x_':='_x not
R17704:17704 PLF.Imp <> X def
R17710:17712 PLF.Imp <> :com::x_'+'_x not
R17709:17709 PLF.Imp <> X def
def 17740:17745 <> prog_i
R17749:17751 PLF.Imp <> com ind
R17758:17760 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17803:17805 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17761:17766 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17773:17783 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17794:17802 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17768:17771 PLF.Imp <> :com::x_'<>'_x not
R17767:17767 PLF.Imp <> X def
R17772:17772 PLF.Imp <> Y def
R17785:17788 PLF.Imp <> :com:com_scope:x_':='_x not
R17784:17784 PLF.Imp <> X def
R17790:17792 PLF.Imp <> :com::x_'+'_x not
R17789:17789 PLF.Imp <> Y def
def 17820:17832 <> equiv_classes
R17836:17839 Coq.Init.Datatypes <> list ind
R17842:17845 Coq.Init.Datatypes <> list ind
R17847:17849 PLF.Imp <> com ind
def 17971:18000 <> manual_grade_for_equiv_classes
R18004:18009 Coq.Init.Datatypes <> option ind
R18015:18015 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R18012:18014 Coq.Init.Datatypes <> nat ind
R18016:18021 Coq.Strings.String <> string ind
R18027:18030 Coq.Init.Datatypes <> None constr
prf 18577:18587 <> refl_aequiv
R18603:18606 PLF.Imp <> aexp ind
binder 18599:18599 <> a:44
R18612:18617 PLF.Equiv <> aequiv def
R18619:18619 PLF.Equiv <> a:44 var
R18621:18621 PLF.Equiv <> a:44 var
prf 18672:18681 <> sym_aequiv
R18701:18704 PLF.Imp <> aexp ind
binder 18693:18694 <> a1:45
binder 18696:18697 <> a2:46
R18722:18725 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18710:18715 PLF.Equiv <> aequiv def
R18717:18718 PLF.Equiv <> a1:45 var
R18720:18721 PLF.Equiv <> a2:46 var
R18726:18731 PLF.Equiv <> aequiv def
R18733:18734 PLF.Equiv <> a2:46 var
R18736:18737 PLF.Equiv <> a1:45 var
prf 18808:18819 <> trans_aequiv
R18842:18845 PLF.Imp <> aexp ind
binder 18831:18832 <> a1:47
binder 18834:18835 <> a2:48
binder 18837:18838 <> a3:49
R18863:18866 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18851:18856 PLF.Equiv <> aequiv def
R18858:18859 PLF.Equiv <> a1:47 var
R18861:18862 PLF.Equiv <> a2:48 var
R18879:18882 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18867:18872 PLF.Equiv <> aequiv def
R18874:18875 PLF.Equiv <> a2:48 var
R18877:18878 PLF.Equiv <> a3:49 var
R18883:18888 PLF.Equiv <> aequiv def
R18890:18891 PLF.Equiv <> a1:47 var
R18893:18894 PLF.Equiv <> a3:49 var
R18913:18918 PLF.Equiv <> aequiv def
prf 19013:19023 <> refl_bequiv
R19039:19042 PLF.Imp <> bexp ind
binder 19035:19035 <> b:50
R19048:19053 PLF.Equiv <> bequiv def
R19055:19055 PLF.Equiv <> b:50 var
R19057:19057 PLF.Equiv <> b:50 var
R19076:19081 PLF.Equiv <> bequiv def
prf 19123:19132 <> sym_bequiv
R19152:19155 PLF.Imp <> bexp ind
binder 19144:19145 <> b1:51
binder 19147:19148 <> b2:52
R19173:19176 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19161:19166 PLF.Equiv <> bequiv def
R19168:19169 PLF.Equiv <> b1:51 var
R19171:19172 PLF.Equiv <> b2:52 var
R19177:19182 PLF.Equiv <> bequiv def
R19184:19185 PLF.Equiv <> b2:52 var
R19187:19188 PLF.Equiv <> b1:51 var
R19207:19212 PLF.Equiv <> bequiv def
prf 19274:19285 <> trans_bequiv
R19308:19311 PLF.Imp <> bexp ind
binder 19297:19298 <> b1:53
binder 19300:19301 <> b2:54
binder 19303:19304 <> b3:55
R19329:19332 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19317:19322 PLF.Equiv <> bequiv def
R19324:19325 PLF.Equiv <> b1:53 var
R19327:19328 PLF.Equiv <> b2:54 var
R19345:19348 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19333:19338 PLF.Equiv <> bequiv def
R19340:19341 PLF.Equiv <> b2:54 var
R19343:19344 PLF.Equiv <> b3:55 var
R19349:19354 PLF.Equiv <> bequiv def
R19356:19357 PLF.Equiv <> b1:53 var
R19359:19360 PLF.Equiv <> b3:55 var
R19379:19384 PLF.Equiv <> bequiv def
prf 19479:19489 <> refl_cequiv
R19505:19507 PLF.Imp <> com ind
binder 19501:19501 <> c:56
R19513:19518 PLF.Equiv <> cequiv def
R19520:19520 PLF.Equiv <> c:56 var
R19522:19522 PLF.Equiv <> c:56 var
R19541:19546 PLF.Equiv <> cequiv def
prf 19592:19601 <> sym_cequiv
R19621:19623 PLF.Imp <> com ind
binder 19613:19614 <> c1:57
binder 19616:19617 <> c2:58
R19641:19644 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19629:19634 PLF.Equiv <> cequiv def
R19636:19637 PLF.Equiv <> c1:57 var
R19639:19640 PLF.Equiv <> c2:58 var
R19645:19650 PLF.Equiv <> cequiv def
R19652:19653 PLF.Equiv <> c2:58 var
R19655:19656 PLF.Equiv <> c1:57 var
R19675:19680 PLF.Equiv <> cequiv def
prf 19744:19755 <> trans_cequiv
R19778:19780 PLF.Imp <> com ind
binder 19767:19768 <> c1:59
binder 19770:19771 <> c2:60
binder 19773:19774 <> c3:61
R19798:19801 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19786:19791 PLF.Equiv <> cequiv def
R19793:19794 PLF.Equiv <> c1:59 var
R19796:19797 PLF.Equiv <> c2:60 var
R19814:19817 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19802:19807 PLF.Equiv <> cequiv def
R19809:19810 PLF.Equiv <> c2:60 var
R19812:19813 PLF.Equiv <> c3:61 var
R19818:19823 PLF.Equiv <> cequiv def
R19825:19826 PLF.Equiv <> c1:59 var
R19828:19829 PLF.Equiv <> c3:61 var
R19848:19853 PLF.Equiv <> cequiv def
prf 21303:21318 <> CAsgn_congruence
binder 21329:21329 <> x:62
binder 21331:21331 <> a:63
binder 21333:21334 <> a':64
R21350:21355 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21339:21344 PLF.Equiv <> aequiv def
R21346:21346 PLF.Equiv <> a:63 var
R21348:21349 PLF.Equiv <> a':64 var
R21356:21361 PLF.Equiv <> cequiv def
R21363:21364 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R21371:21372 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R21366:21369 PLF.Imp <> :com:com_scope:x_':='_x not
R21365:21365 PLF.Equiv <> x:62 var
R21370:21370 PLF.Equiv <> a:63 var
R21374:21375 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R21383:21384 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R21377:21380 PLF.Imp <> :com:com_scope:x_':='_x not
R21376:21376 PLF.Equiv <> x:62 var
R21381:21382 PLF.Equiv <> a':64 var
R21495:21500 PLF.Imp <> E_Asgn constr
R21495:21500 PLF.Imp <> E_Asgn constr
R21582:21587 PLF.Imp <> E_Asgn constr
R21582:21587 PLF.Imp <> E_Asgn constr
prf 23425:23441 <> CWhile_congruence
binder 23452:23452 <> b:65
binder 23454:23455 <> b':66
binder 23457:23457 <> c:67
binder 23459:23460 <> c':68
R23476:23479 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23465:23470 PLF.Equiv <> bequiv def
R23472:23472 PLF.Equiv <> b:65 var
R23474:23475 PLF.Equiv <> b':66 var
R23491:23496 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23480:23485 PLF.Equiv <> cequiv def
R23487:23487 PLF.Equiv <> c:67 var
R23489:23490 PLF.Equiv <> c':68 var
R23497:23502 PLF.Equiv <> cequiv def
R23504:23506 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R23523:23525 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R23507:23512 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23514:23517 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23519:23522 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23513:23513 PLF.Equiv <> b:65 var
R23518:23518 PLF.Equiv <> c:67 var
R23527:23529 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R23548:23550 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R23530:23535 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23538:23541 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23544:23547 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23536:23537 PLF.Equiv <> b':66 var
R23542:23543 PLF.Equiv <> c':68 var
R23708:23711 PLF.Imp <> bexp ind
binder 23701:23701 <> b:69
binder 23703:23704 <> b':70
R23722:23724 PLF.Imp <> com ind
binder 23715:23715 <> c:71
binder 23717:23718 <> c':72
R23737:23741 PLF.Imp <> state def
binder 23728:23729 <> st:73
binder 23731:23733 <> st':74
R23769:23772 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23758:23763 PLF.Equiv <> bequiv def
R23765:23765 PLF.Equiv <> b:69 var
R23767:23768 PLF.Equiv <> b':70 var
R23784:23800 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23773:23778 PLF.Equiv <> cequiv def
R23780:23780 PLF.Equiv <> c:71 var
R23782:23783 PLF.Equiv <> c':72 var
R23831:23847 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23803:23806 PLF.Imp <> :::x_'=['_x_']=>'_x not
R23823:23827 PLF.Imp <> :::x_'=['_x_']=>'_x not
R23807:23812 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23814:23817 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23819:23822 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23813:23813 PLF.Equiv <> b:69 var
R23818:23818 PLF.Equiv <> c:71 var
R23801:23802 PLF.Equiv <> st:73 var
R23828:23830 PLF.Equiv <> st':74 var
R23850:23853 PLF.Imp <> :::x_'=['_x_']=>'_x not
R23872:23876 PLF.Imp <> :::x_'=['_x_']=>'_x not
R23854:23859 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23862:23865 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23868:23871 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23860:23861 PLF.Equiv <> b':70 var
R23866:23867 PLF.Equiv <> c':72 var
R23848:23849 PLF.Equiv <> st:73 var
R23877:23879 PLF.Equiv <> st':74 var
R23708:23711 PLF.Imp <> bexp ind
binder 23701:23701 <> b:75
binder 23703:23704 <> b':76
R23722:23724 PLF.Imp <> com ind
binder 23715:23715 <> c:77
binder 23717:23718 <> c':78
R23737:23741 PLF.Imp <> state def
binder 23728:23729 <> st:79
binder 23731:23733 <> st':80
R23769:23772 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23758:23763 PLF.Equiv <> bequiv def
R23765:23765 PLF.Equiv <> b:75 var
R23767:23768 PLF.Equiv <> b':76 var
R23784:23800 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23773:23778 PLF.Equiv <> cequiv def
R23780:23780 PLF.Equiv <> c:77 var
R23782:23783 PLF.Equiv <> c':78 var
R23831:23847 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23803:23806 PLF.Imp <> :::x_'=['_x_']=>'_x not
R23823:23827 PLF.Imp <> :::x_'=['_x_']=>'_x not
R23807:23812 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23814:23817 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23819:23822 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23813:23813 PLF.Equiv <> b:75 var
R23818:23818 PLF.Equiv <> c:77 var
R23801:23802 PLF.Equiv <> st:79 var
R23828:23830 PLF.Equiv <> st':80 var
R23850:23853 PLF.Imp <> :::x_'=['_x_']=>'_x not
R23872:23876 PLF.Imp <> :::x_'=['_x_']=>'_x not
R23854:23859 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23862:23865 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23868:23871 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23860:23861 PLF.Equiv <> b':76 var
R23866:23867 PLF.Equiv <> c':78 var
R23848:23849 PLF.Equiv <> st:79 var
R23877:23879 PLF.Equiv <> st':80 var
R23894:23899 PLF.Equiv <> bequiv def
R23901:23906 PLF.Equiv <> cequiv def
R23964:23966 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R23983:23985 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R23967:23972 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23974:23977 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23979:23982 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23964:23966 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R23983:23985 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R23967:23972 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23974:23977 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23979:23982 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24102:24113 PLF.Imp <> E_WhileFalse constr
R24102:24113 PLF.Imp <> E_WhileFalse constr
R24177:24187 PLF.Imp <> E_WhileTrue constr
R24177:24187 PLF.Imp <> E_WhileTrue constr
R24478:24487 PLF.Equiv <> sym_bequiv thm
R24478:24487 PLF.Equiv <> sym_bequiv thm
R24514:24523 PLF.Equiv <> sym_cequiv thm
R24514:24523 PLF.Equiv <> sym_cequiv thm
prf 24620:24634 <> CSeq_congruence
binder 24645:24646 <> c1:81
binder 24648:24650 <> c1':82
binder 24652:24653 <> c2:83
binder 24655:24657 <> c2':84
R24675:24678 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24662:24667 PLF.Equiv <> cequiv def
R24669:24670 PLF.Equiv <> c1:81 var
R24672:24674 PLF.Equiv <> c1':82 var
R24692:24697 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24679:24684 PLF.Equiv <> cequiv def
R24686:24687 PLF.Equiv <> c2:83 var
R24689:24691 PLF.Equiv <> c2':84 var
R24698:24703 PLF.Equiv <> cequiv def
R24705:24707 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R24713:24715 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R24710:24710 PLF.Imp <> :com:com_scope:x_';'_x not
R24708:24709 PLF.Equiv <> c1:81 var
R24711:24712 PLF.Equiv <> c2:83 var
R24717:24719 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R24727:24729 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R24723:24723 PLF.Imp <> :com:com_scope:x_';'_x not
R24720:24722 PLF.Equiv <> c1':82 var
R24724:24726 PLF.Equiv <> c2':84 var
prf 24846:24859 <> CIf_congruence
binder 24870:24870 <> b:85
binder 24872:24873 <> b':86
binder 24875:24876 <> c1:87
binder 24878:24880 <> c1':88
binder 24882:24883 <> c2:89
binder 24885:24887 <> c2':90
R24903:24906 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24892:24897 PLF.Equiv <> bequiv def
R24899:24899 PLF.Equiv <> b:85 var
R24901:24902 PLF.Equiv <> b':86 var
R24920:24923 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24907:24912 PLF.Equiv <> cequiv def
R24914:24915 PLF.Equiv <> c1:87 var
R24917:24919 PLF.Equiv <> c1':88 var
R24937:24942 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24924:24929 PLF.Equiv <> cequiv def
R24931:24932 PLF.Equiv <> c2:89 var
R24934:24936 PLF.Equiv <> c2':90 var
R24943:24948 PLF.Equiv <> cequiv def
R24950:24952 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R24977:24979 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R24953:24955 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R24957:24962 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R24965:24970 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R24973:24976 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R24956:24956 PLF.Equiv <> b:85 var
R24963:24964 PLF.Equiv <> c1:87 var
R24971:24972 PLF.Equiv <> c2:89 var
R24990:24992 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25020:25022 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R24993:24995 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R24998:25003 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25007:25012 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25016:25019 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R24996:24997 PLF.Equiv <> b':86 var
R25004:25006 PLF.Equiv <> c1':88 var
R25013:25015 PLF.Equiv <> c2':90 var
R25060:25063 PLF.Imp <> bexp ind
binder 25053:25053 <> b:91
binder 25055:25056 <> b':92
R25083:25085 PLF.Imp <> com ind
binder 25067:25068 <> c1:93
binder 25070:25072 <> c1':94
binder 25074:25075 <> c2:95
binder 25077:25079 <> c2':96
R25098:25102 PLF.Imp <> state def
binder 25089:25090 <> st:97
binder 25092:25094 <> st':98
R25130:25133 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25119:25124 PLF.Equiv <> bequiv def
R25126:25126 PLF.Equiv <> b:91 var
R25128:25129 PLF.Equiv <> b':92 var
R25147:25151 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25134:25139 PLF.Equiv <> cequiv def
R25141:25142 PLF.Equiv <> c1:93 var
R25144:25146 PLF.Equiv <> c1':94 var
R25165:25182 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25152:25157 PLF.Equiv <> cequiv def
R25159:25160 PLF.Equiv <> c2:95 var
R25162:25164 PLF.Equiv <> c2':96 var
R25220:25236 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25185:25188 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25213:25216 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25189:25191 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25193:25198 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25201:25206 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25209:25212 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25192:25192 PLF.Equiv <> b:91 var
R25199:25200 PLF.Equiv <> c1:93 var
R25207:25208 PLF.Equiv <> c2:95 var
R25183:25184 PLF.Equiv <> st:97 var
R25217:25219 PLF.Equiv <> st':98 var
R25239:25242 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25270:25275 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25243:25245 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25248:25253 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25257:25262 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25266:25269 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25246:25247 PLF.Equiv <> b':92 var
R25254:25256 PLF.Equiv <> c1':94 var
R25263:25265 PLF.Equiv <> c2':96 var
R25237:25238 PLF.Equiv <> st:97 var
R25276:25278 PLF.Equiv <> st':98 var
R25060:25063 PLF.Imp <> bexp ind
binder 25053:25053 <> b:99
binder 25055:25056 <> b':100
R25083:25085 PLF.Imp <> com ind
binder 25067:25068 <> c1:101
binder 25070:25072 <> c1':102
binder 25074:25075 <> c2:103
binder 25077:25079 <> c2':104
R25098:25102 PLF.Imp <> state def
binder 25089:25090 <> st:105
binder 25092:25094 <> st':106
R25130:25133 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25119:25124 PLF.Equiv <> bequiv def
R25126:25126 PLF.Equiv <> b:99 var
R25128:25129 PLF.Equiv <> b':100 var
R25147:25151 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25134:25139 PLF.Equiv <> cequiv def
R25141:25142 PLF.Equiv <> c1:101 var
R25144:25146 PLF.Equiv <> c1':102 var
R25165:25182 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25152:25157 PLF.Equiv <> cequiv def
R25159:25160 PLF.Equiv <> c2:103 var
R25162:25164 PLF.Equiv <> c2':104 var
R25220:25236 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25185:25188 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25213:25216 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25189:25191 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25193:25198 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25201:25206 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25209:25212 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25192:25192 PLF.Equiv <> b:99 var
R25199:25200 PLF.Equiv <> c1:101 var
R25207:25208 PLF.Equiv <> c2:103 var
R25183:25184 PLF.Equiv <> st:105 var
R25217:25219 PLF.Equiv <> st':106 var
R25239:25242 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25270:25275 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25243:25245 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25248:25253 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25257:25262 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25266:25269 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25246:25247 PLF.Equiv <> b':100 var
R25254:25256 PLF.Equiv <> c1':102 var
R25263:25265 PLF.Equiv <> c2':104 var
R25237:25238 PLF.Equiv <> st:105 var
R25276:25278 PLF.Equiv <> st':106 var
R25293:25298 PLF.Equiv <> bequiv def
R25300:25305 PLF.Equiv <> cequiv def
R25325:25326 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25351:25353 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25327:25329 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25331:25336 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25339:25344 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25347:25350 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25325:25326 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25351:25353 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25327:25329 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25331:25336 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25339:25344 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25347:25350 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25421:25428 PLF.Imp <> E_IfTrue constr
R25421:25428 PLF.Imp <> E_IfTrue constr
R25509:25517 PLF.Imp <> E_IfFalse constr
R25509:25517 PLF.Imp <> E_IfFalse constr
R25656:25665 PLF.Equiv <> sym_bequiv thm
R25656:25665 PLF.Equiv <> sym_bequiv thm
R25692:25701 PLF.Equiv <> sym_cequiv thm
R25692:25701 PLF.Equiv <> sym_cequiv thm
R25731:25740 PLF.Equiv <> sym_cequiv thm
R25731:25740 PLF.Equiv <> sym_cequiv thm
def 25873:25890 <> congruence_example
R25895:25900 PLF.Equiv <> cequiv def
R25927:25929 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25991:25993 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25936:25944 PLF.Imp <> :com:com_scope:x_';'_x not
R25931:25934 PLF.Imp <> :com:com_scope:x_':='_x not
R25930:25930 PLF.Imp <> X def
R25945:25947 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25955:25960 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25967:25979 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25987:25990 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25948:25948 PLF.Imp <> :com:com_scope:'('_x_')' not
R25954:25954 PLF.Imp <> :com:com_scope:'('_x_')' not
R25950:25952 PLF.Imp <> :com::x_'='_x not
R25949:25949 PLF.Imp <> X def
R25962:25965 PLF.Imp <> :com:com_scope:x_':='_x not
R25961:25961 PLF.Imp <> Y def
R25981:25984 PLF.Imp <> :com:com_scope:x_':='_x not
R25980:25980 PLF.Imp <> Y def
R26020:26022 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R26114:26116 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R26029:26037 PLF.Imp <> :com:com_scope:x_';'_x not
R26024:26027 PLF.Imp <> :com:com_scope:x_':='_x not
R26023:26023 PLF.Imp <> X def
R26038:26040 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26048:26053 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26064:26102 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26110:26113 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26041:26041 PLF.Imp <> :com:com_scope:'('_x_')' not
R26047:26047 PLF.Imp <> :com:com_scope:'('_x_')' not
R26043:26045 PLF.Imp <> :com::x_'='_x not
R26042:26042 PLF.Imp <> X def
R26055:26058 PLF.Imp <> :com:com_scope:x_':='_x not
R26054:26054 PLF.Imp <> Y def
R26060:26062 PLF.Imp <> :com::x_'-'_x not
R26059:26059 PLF.Imp <> X def
R26063:26063 PLF.Imp <> X def
R26104:26107 PLF.Imp <> :com:com_scope:x_':='_x not
R26103:26103 PLF.Imp <> Y def
R26134:26148 PLF.Equiv <> CSeq_congruence prfax
R26134:26148 PLF.Equiv <> CSeq_congruence prfax
R26161:26171 PLF.Equiv <> refl_cequiv thm
R26161:26171 PLF.Equiv <> refl_cequiv thm
R26184:26197 PLF.Equiv <> CIf_congruence thm
R26184:26197 PLF.Equiv <> CIf_congruence thm
R26212:26222 PLF.Equiv <> refl_bequiv thm
R26212:26222 PLF.Equiv <> refl_bequiv thm
R26237:26252 PLF.Equiv <> CAsgn_congruence thm
R26237:26252 PLF.Equiv <> CAsgn_congruence thm
R26262:26267 PLF.Equiv <> aequiv def
R26299:26306 Coq.Arith.PeanoNat Nat sub_diag thm
R26299:26306 Coq.Arith.PeanoNat Nat sub_diag thm
R26321:26331 PLF.Equiv <> refl_cequiv thm
R26321:26331 PLF.Equiv <> refl_cequiv thm
def 26793:26818 <> manual_grade_for_not_congr
R26822:26827 Coq.Init.Datatypes <> option ind
R26833:26833 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R26830:26832 Coq.Init.Datatypes <> nat ind
R26834:26839 Coq.Strings.String <> string ind
R26845:26848 Coq.Init.Datatypes <> None constr
def 27327:27338 <> atrans_sound
R27354:27357 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27350:27353 PLF.Imp <> aexp ind
R27358:27361 PLF.Imp <> aexp ind
binder 27341:27346 <> atrans:107
R27388:27391 PLF.Imp <> aexp ind
binder 27384:27384 <> a:108
R27399:27404 PLF.Equiv <> aequiv def
R27406:27406 PLF.Equiv <> a:108 var
R27409:27414 PLF.Equiv <> atrans:107 var
R27416:27416 PLF.Equiv <> a:108 var
def 27432:27443 <> btrans_sound
R27459:27462 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27455:27458 PLF.Imp <> bexp ind
R27463:27466 PLF.Imp <> bexp ind
binder 27446:27451 <> btrans:109
R27493:27496 PLF.Imp <> bexp ind
binder 27489:27489 <> b:110
R27504:27509 PLF.Equiv <> bequiv def
R27511:27511 PLF.Equiv <> b:110 var
R27514:27519 PLF.Equiv <> btrans:109 var
R27521:27521 PLF.Equiv <> b:110 var
def 27537:27548 <> ctrans_sound
R27563:27566 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27560:27562 PLF.Imp <> com ind
R27567:27569 PLF.Imp <> com ind
binder 27551:27556 <> ctrans:111
R27596:27598 PLF.Imp <> com ind
binder 27592:27592 <> c:112
R27606:27611 PLF.Equiv <> cequiv def
R27613:27613 PLF.Equiv <> c:112 var
R27616:27621 PLF.Equiv <> ctrans:111 var
R27623:27623 PLF.Equiv <> c:112 var
def 27943:27961 <> fold_constants_aexp
R27968:27971 PLF.Imp <> aexp ind
binder 27964:27964 <> a:113
R27976:27979 PLF.Imp <> aexp ind
R27992:27992 PLF.Equiv <> a:113 var
R28003:28006 PLF.Imp <> ANum constr
R28019:28022 PLF.Imp <> ANum constr
R28030:28032 PLF.Imp <> AId constr
R28046:28048 PLF.Imp <> AId constr
R28056:28058 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28066:28068 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28061:28063 PLF.Imp <> :com::x_'+'_x not
R28084:28084 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28107:28119 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28142:28142 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28085:28103 PLF.Equiv <> fold_constants_aexp:114 def
R28120:28138 PLF.Equiv <> fold_constants_aexp:114 def
R28159:28159 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28167:28168 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28176:28176 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28160:28163 PLF.Imp <> ANum constr
R28169:28172 PLF.Imp <> ANum constr
R28181:28184 PLF.Imp <> ANum constr
R28189:28191 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R28202:28202 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28206:28207 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28211:28211 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28216:28218 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28228:28230 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28222:28224 PLF.Imp <> :com::x_'+'_x not
R28244:28246 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28254:28256 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28249:28251 PLF.Imp <> :com::x_'-'_x not
R28271:28271 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28294:28306 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28329:28329 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28272:28290 PLF.Equiv <> fold_constants_aexp:114 def
R28307:28325 PLF.Equiv <> fold_constants_aexp:114 def
R28346:28346 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28354:28355 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28363:28363 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28347:28350 PLF.Imp <> ANum constr
R28356:28359 PLF.Imp <> ANum constr
R28368:28371 PLF.Imp <> ANum constr
R28376:28378 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R28389:28389 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28393:28394 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28398:28398 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28403:28405 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28415:28417 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28409:28411 PLF.Imp <> :com::x_'-'_x not
R28431:28433 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28441:28443 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28436:28438 PLF.Imp <> :com::x_'*'_x not
R28459:28459 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28482:28494 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28517:28517 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28460:28478 PLF.Equiv <> fold_constants_aexp:114 def
R28495:28513 PLF.Equiv <> fold_constants_aexp:114 def
R28534:28534 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28542:28543 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28551:28551 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28535:28538 PLF.Imp <> ANum constr
R28544:28547 PLF.Imp <> ANum constr
R28556:28559 PLF.Imp <> ANum constr
R28564:28566 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R28577:28577 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28581:28582 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28586:28586 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28591:28593 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28603:28605 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28597:28599 PLF.Imp <> :com::x_'*'_x not
def 28631:28643 <> fold_aexp_ex1
R28688:28692 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28651:28669 PLF.Equiv <> fold_constants_aexp def
R28671:28673 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28685:28687 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28681:28683 PLF.Imp <> :com::x_'*'_x not
R28674:28674 PLF.Imp <> :com:com_scope:'('_x_')' not
R28680:28680 PLF.Imp <> :com:com_scope:'('_x_')' not
R28676:28678 PLF.Imp <> :com::x_'+'_x not
R28684:28684 PLF.Imp <> X def
R28693:28695 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28701:28703 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28697:28699 PLF.Imp <> :com::x_'*'_x not
R28700:28700 PLF.Imp <> X def
def 29167:29179 <> fold_aexp_ex2
R29228:29230 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29185:29203 PLF.Equiv <> fold_constants_aexp def
R29205:29207 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29225:29227 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29209:29211 PLF.Imp <> :com::x_'-'_x not
R29208:29208 PLF.Imp <> X def
R29212:29212 PLF.Imp <> :com:com_scope:'('_x_')' not
R29224:29224 PLF.Imp <> :com:com_scope:'('_x_')' not
R29220:29222 PLF.Imp <> :com::x_'+'_x not
R29213:29213 PLF.Imp <> :com:com_scope:'('_x_')' not
R29219:29219 PLF.Imp <> :com:com_scope:'('_x_')' not
R29215:29217 PLF.Imp <> :com::x_'*'_x not
R29223:29223 PLF.Imp <> Y def
R29231:29233 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29245:29247 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29235:29237 PLF.Imp <> :com::x_'-'_x not
R29234:29234 PLF.Imp <> X def
R29238:29238 PLF.Imp <> :com:com_scope:'('_x_')' not
R29244:29244 PLF.Imp <> :com:com_scope:'('_x_')' not
R29240:29242 PLF.Imp <> :com::x_'+'_x not
R29243:29243 PLF.Imp <> Y def
def 29484:29502 <> fold_constants_bexp
R29509:29512 PLF.Imp <> bexp ind
binder 29505:29505 <> b:116
R29517:29520 PLF.Imp <> bexp ind
R29533:29533 PLF.Equiv <> b:116 var
R29544:29545 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29550:29551 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29546:29549 PLF.Imp <> :com::'true' not
R29563:29564 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29569:29570 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29565:29568 PLF.Imp <> :com::'true' not
R29576:29577 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29583:29584 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29578:29582 PLF.Imp <> :com::'false' not
R29595:29596 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29602:29603 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29597:29601 PLF.Imp <> :com::'false' not
R29609:29611 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29619:29621 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29614:29616 PLF.Imp <> :com::x_'='_x not
R29639:29639 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29662:29676 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29699:29699 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29640:29658 PLF.Equiv <> fold_constants_aexp def
R29677:29695 PLF.Equiv <> fold_constants_aexp def
R29714:29714 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29722:29723 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29731:29731 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29715:29718 PLF.Imp <> ANum constr
R29724:29727 PLF.Imp <> ANum constr
R29751:29754 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R29777:29778 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29784:29785 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29779:29783 PLF.Imp <> :com::'false' not
R29763:29764 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29769:29770 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29765:29768 PLF.Imp <> :com::'true' not
R29795:29795 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29799:29800 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29804:29804 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29819:29821 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29831:29833 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29825:29827 PLF.Imp <> :com::x_'='_x not
R29849:29851 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29860:29862 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29854:29857 PLF.Imp <> :com::x_'<>'_x not
R29880:29880 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29903:29917 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29940:29940 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29881:29899 PLF.Equiv <> fold_constants_aexp def
R29918:29936 PLF.Equiv <> fold_constants_aexp def
R29955:29955 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29963:29964 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29972:29972 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29956:29959 PLF.Imp <> ANum constr
R29965:29968 PLF.Imp <> ANum constr
R29990:29993 Coq.Init.Datatypes <> negb def
R29998:30001 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R30025:30026 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30032:30033 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30027:30031 PLF.Imp <> :com::'false' not
R30011:30012 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30017:30018 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30013:30016 PLF.Imp <> :com::'true' not
R30043:30043 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30047:30048 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30052:30052 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30067:30069 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30080:30082 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30073:30076 PLF.Imp <> :com::x_'<>'_x not
R30098:30100 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30109:30111 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30103:30106 PLF.Imp <> :com::x_'<='_x not
R30129:30129 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30152:30166 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30189:30189 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30130:30148 PLF.Equiv <> fold_constants_aexp def
R30167:30185 PLF.Equiv <> fold_constants_aexp def
R30204:30204 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30212:30213 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30221:30221 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30205:30208 PLF.Imp <> ANum constr
R30214:30217 PLF.Imp <> ANum constr
R30241:30245 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R30268:30269 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30275:30276 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30270:30274 PLF.Imp <> :com::'false' not
R30254:30255 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30260:30261 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30256:30259 PLF.Imp <> :com::'true' not
R30286:30286 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30290:30291 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30295:30295 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30310:30312 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30323:30325 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30316:30319 PLF.Imp <> :com::x_'<='_x not
R30341:30343 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30351:30353 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30346:30348 PLF.Imp <> :com::x_'>'_x not
R30371:30371 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30394:30408 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30431:30431 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30372:30390 PLF.Equiv <> fold_constants_aexp def
R30409:30427 PLF.Equiv <> fold_constants_aexp def
R30446:30446 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30454:30455 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30463:30463 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30447:30450 PLF.Imp <> ANum constr
R30456:30459 PLF.Imp <> ANum constr
R30483:30487 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R30511:30512 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30517:30518 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30513:30516 PLF.Imp <> :com::'true' not
R30496:30497 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30503:30504 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30498:30502 PLF.Imp <> :com::'false' not
R30528:30528 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30532:30533 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30537:30537 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30552:30554 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30564:30566 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30558:30560 PLF.Imp <> :com::x_'>'_x not
R30582:30584 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30589:30591 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30585:30586 PLF.Imp <> :com::'~'_x not
R30610:30628 PLF.Equiv <> fold_constants_bexp:117 def
R30647:30648 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30653:30654 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30649:30652 PLF.Imp <> :com::'true' not
R30659:30660 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30666:30667 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30661:30665 PLF.Imp <> :com::'false' not
R30677:30678 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30684:30685 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30679:30683 PLF.Imp <> :com::'false' not
R30690:30691 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30696:30697 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30692:30695 PLF.Imp <> :com::'true' not
R30714:30716 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30722:30724 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30717:30718 PLF.Imp <> :com::'~'_x not
R30740:30742 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30751:30753 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30745:30748 PLF.Imp <> :com::x_'&&'_x not
R30771:30771 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30794:30808 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30831:30831 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30772:30790 PLF.Equiv <> fold_constants_bexp:117 def
R30809:30827 PLF.Equiv <> fold_constants_bexp:117 def
R30846:30846 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30855:30856 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30865:30865 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30847:30848 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30853:30854 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30849:30852 PLF.Imp <> :com::'true' not
R30857:30858 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30863:30864 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30859:30862 PLF.Imp <> :com::'true' not
R30870:30871 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30876:30877 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30872:30875 PLF.Imp <> :com::'true' not
R30887:30887 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30896:30897 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30907:30907 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30888:30889 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30894:30895 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30890:30893 PLF.Imp <> :com::'true' not
R30898:30899 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30905:30906 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30900:30904 PLF.Imp <> :com::'false' not
R30912:30913 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30919:30920 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30914:30918 PLF.Imp <> :com::'false' not
R30930:30930 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30940:30941 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30950:30950 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30931:30932 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30938:30939 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30933:30937 PLF.Imp <> :com::'false' not
R30942:30943 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30948:30949 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30944:30947 PLF.Imp <> :com::'true' not
R30955:30956 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30962:30963 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30957:30961 PLF.Imp <> :com::'false' not
R30973:30973 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30983:30984 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30994:30994 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30974:30975 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30981:30982 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30976:30980 PLF.Imp <> :com::'false' not
R30985:30986 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30992:30993 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30987:30991 PLF.Imp <> :com::'false' not
R30999:31000 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31006:31007 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31001:31005 PLF.Imp <> :com::'false' not
R31017:31017 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31021:31022 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31026:31026 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31031:31033 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31044:31046 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31037:31040 PLF.Imp <> :com::x_'&&'_x not
def 31074:31086 <> fold_bexp_ex1
R31142:31146 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31092:31110 PLF.Equiv <> fold_constants_bexp def
R31112:31114 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31139:31141 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31119:31122 PLF.Imp <> :com::x_'&&'_x not
R31115:31118 PLF.Imp <> :com::'true' not
R31123:31123 PLF.Imp <> :com::'~'_x not
R31124:31124 PLF.Imp <> :com:com_scope:'('_x_')' not
R31138:31138 PLF.Imp <> :com:com_scope:'('_x_')' not
R31130:31133 PLF.Imp <> :com::x_'&&'_x not
R31125:31129 PLF.Imp <> :com::'false' not
R31134:31137 PLF.Imp <> :com::'true' not
R31147:31149 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31154:31156 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31150:31153 PLF.Imp <> :com::'true' not
def 31193:31205 <> fold_bexp_ex2
R31267:31271 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31211:31229 PLF.Equiv <> fold_constants_bexp def
R31231:31233 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31264:31266 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31241:31244 PLF.Imp <> :com::x_'&&'_x not
R31234:31234 PLF.Imp <> :com:com_scope:'('_x_')' not
R31240:31240 PLF.Imp <> :com:com_scope:'('_x_')' not
R31236:31238 PLF.Imp <> :com::x_'='_x not
R31235:31235 PLF.Imp <> X def
R31239:31239 PLF.Imp <> Y def
R31245:31245 PLF.Imp <> :com:com_scope:'('_x_')' not
R31263:31263 PLF.Imp <> :com:com_scope:'('_x_')' not
R31247:31249 PLF.Imp <> :com::x_'='_x not
R31250:31250 PLF.Imp <> :com:com_scope:'('_x_')' not
R31262:31262 PLF.Imp <> :com:com_scope:'('_x_')' not
R31252:31254 PLF.Imp <> :com::x_'-'_x not
R31255:31255 PLF.Imp <> :com:com_scope:'('_x_')' not
R31261:31261 PLF.Imp <> :com:com_scope:'('_x_')' not
R31257:31259 PLF.Imp <> :com::x_'+'_x not
R31272:31274 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31290:31292 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31282:31285 PLF.Imp <> :com::x_'&&'_x not
R31275:31275 PLF.Imp <> :com:com_scope:'('_x_')' not
R31281:31281 PLF.Imp <> :com:com_scope:'('_x_')' not
R31277:31279 PLF.Imp <> :com::x_'='_x not
R31276:31276 PLF.Imp <> X def
R31280:31280 PLF.Imp <> Y def
R31286:31289 PLF.Imp <> :com::'true' not
def 31446:31463 <> fold_constants_com
R31470:31472 PLF.Imp <> com ind
binder 31466:31466 <> c:119
R31477:31479 PLF.Imp <> com ind
R31492:31492 PLF.Equiv <> c:119 var
R31503:31505 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31510:31512 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31506:31509 PLF.Imp <> :com:com_scope:'skip' not
R31523:31525 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31530:31532 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31526:31529 PLF.Imp <> :com:com_scope:'skip' not
R31538:31540 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31547:31549 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31542:31545 PLF.Imp <> :com:com_scope:x_':='_x not
R31560:31562 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31591:31593 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31564:31567 PLF.Imp <> :com:com_scope:x_':='_x not
R31568:31568 PLF.Imp <> :com:com_scope:'('_x_')' not
R31590:31590 PLF.Imp <> :com:com_scope:'('_x_')' not
R31588:31588 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R31569:31587 PLF.Equiv <> fold_constants_aexp def
R31599:31601 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31609:31611 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31604:31606 PLF.Imp <> :com:com_scope:x_';'_x not
R31623:31625 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31671:31673 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31647:31649 PLF.Imp <> :com:com_scope:x_';'_x not
R31644:31644 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R31626:31643 PLF.Equiv <> fold_constants_com:120 def
R31668:31668 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R31650:31667 PLF.Equiv <> fold_constants_com:120 def
R31679:31681 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31706:31708 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31682:31684 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R31686:31691 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R31694:31699 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R31702:31705 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R31725:31743 PLF.Equiv <> fold_constants_bexp def
R31760:31761 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31766:31767 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31762:31765 PLF.Imp <> :com::'true' not
R31773:31790 PLF.Equiv <> fold_constants_com:120 def
R31803:31804 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31810:31811 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31805:31809 PLF.Imp <> :com::'false' not
R31816:31833 PLF.Equiv <> fold_constants_com:120 def
R31852:31854 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31941:31942 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31855:31857 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R31860:31865 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R31887:31915 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R31937:31940 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R31884:31884 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R31866:31883 PLF.Equiv <> fold_constants_com:120 def
R31934:31934 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R31916:31933 PLF.Equiv <> fold_constants_com:120 def
R31958:31960 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31978:31980 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31961:31966 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R31968:31971 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R31974:31977 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R31997:32015 PLF.Equiv <> fold_constants_bexp def
R32032:32033 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32038:32039 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32034:32037 PLF.Imp <> :com::'true' not
R32044:32046 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32069:32071 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32047:32052 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32057:32060 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32065:32068 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32053:32056 PLF.Imp <> :com::'true' not
R32061:32064 PLF.Imp <> :com:com_scope:'skip' not
R32081:32082 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32088:32089 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32083:32087 PLF.Imp <> :com::'false' not
R32094:32096 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32101:32103 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32097:32100 PLF.Imp <> :com:com_scope:'skip' not
R32119:32121 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32161:32163 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32122:32127 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32130:32133 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32157:32160 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32134:32134 PLF.Imp <> :com:com_scope:'('_x_')' not
R32156:32156 PLF.Imp <> :com:com_scope:'('_x_')' not
R32153:32153 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R32135:32152 PLF.Equiv <> fold_constants_com:120 def
def 32191:32202 <> fold_com_ex1
R32479:32517 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32208:32225 PLF.Equiv <> fold_constants_com def
R32259:32261 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32476:32478 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32272:32280 PLF.Imp <> :com:com_scope:x_';'_x not
R32263:32266 PLF.Imp <> :com:com_scope:x_':='_x not
R32262:32262 PLF.Imp <> X def
R32268:32270 PLF.Imp <> :com::x_'+'_x not
R32291:32299 PLF.Imp <> :com:com_scope:x_';'_x not
R32282:32285 PLF.Imp <> :com:com_scope:x_':='_x not
R32281:32281 PLF.Imp <> Y def
R32287:32289 PLF.Imp <> :com::x_'-'_x not
R32286:32286 PLF.Imp <> X def
R32355:32363 PLF.Imp <> :com:com_scope:x_';'_x not
R32300:32302 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32322:32327 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32332:32344 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32351:32354 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32303:32303 PLF.Imp <> :com:com_scope:'('_x_')' not
R32321:32321 PLF.Imp <> :com:com_scope:'('_x_')' not
R32311:32313 PLF.Imp <> :com::x_'='_x not
R32304:32304 PLF.Imp <> :com:com_scope:'('_x_')' not
R32310:32310 PLF.Imp <> :com:com_scope:'('_x_')' not
R32306:32308 PLF.Imp <> :com::x_'-'_x not
R32305:32305 PLF.Imp <> X def
R32309:32309 PLF.Imp <> Y def
R32314:32314 PLF.Imp <> :com:com_scope:'('_x_')' not
R32320:32320 PLF.Imp <> :com:com_scope:'('_x_')' not
R32316:32318 PLF.Imp <> :com::x_'+'_x not
R32328:32331 PLF.Imp <> :com:com_scope:'skip' not
R32346:32349 PLF.Imp <> :com:com_scope:x_':='_x not
R32345:32345 PLF.Imp <> Y def
R32420:32428 PLF.Imp <> :com:com_scope:x_';'_x not
R32364:32366 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32387:32392 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32399:32411 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32416:32419 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32367:32367 PLF.Imp <> :com:com_scope:'('_x_')' not
R32386:32386 PLF.Imp <> :com:com_scope:'('_x_')' not
R32369:32372 PLF.Imp <> :com::x_'<='_x not
R32373:32373 PLF.Imp <> :com:com_scope:'('_x_')' not
R32385:32385 PLF.Imp <> :com:com_scope:'('_x_')' not
R32375:32377 PLF.Imp <> :com::x_'-'_x not
R32378:32378 PLF.Imp <> :com:com_scope:'('_x_')' not
R32384:32384 PLF.Imp <> :com:com_scope:'('_x_')' not
R32380:32382 PLF.Imp <> :com::x_'+'_x not
R32394:32397 PLF.Imp <> :com:com_scope:x_':='_x not
R32393:32393 PLF.Imp <> Y def
R32412:32415 PLF.Imp <> :com:com_scope:'skip' not
R32429:32434 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32442:32454 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32465:32475 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32435:32435 PLF.Imp <> :com:com_scope:'('_x_')' not
R32441:32441 PLF.Imp <> :com:com_scope:'('_x_')' not
R32437:32439 PLF.Imp <> :com::x_'='_x not
R32436:32436 PLF.Imp <> Y def
R32456:32459 PLF.Imp <> :com:com_scope:x_':='_x not
R32455:32455 PLF.Imp <> X def
R32461:32463 PLF.Imp <> :com::x_'+'_x not
R32460:32460 PLF.Imp <> X def
R32518:32520 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32675:32677 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32527:32535 PLF.Imp <> :com:com_scope:x_';'_x not
R32522:32525 PLF.Imp <> :com:com_scope:x_':='_x not
R32521:32521 PLF.Imp <> X def
R32546:32554 PLF.Imp <> :com:com_scope:x_';'_x not
R32537:32540 PLF.Imp <> :com:com_scope:x_':='_x not
R32536:32536 PLF.Imp <> Y def
R32542:32544 PLF.Imp <> :com::x_'-'_x not
R32541:32541 PLF.Imp <> X def
R32604:32612 PLF.Imp <> :com:com_scope:x_';'_x not
R32555:32557 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32571:32576 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32581:32593 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32600:32603 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32558:32558 PLF.Imp <> :com:com_scope:'('_x_')' not
R32570:32570 PLF.Imp <> :com:com_scope:'('_x_')' not
R32566:32568 PLF.Imp <> :com::x_'='_x not
R32559:32559 PLF.Imp <> :com:com_scope:'('_x_')' not
R32565:32565 PLF.Imp <> :com:com_scope:'('_x_')' not
R32561:32563 PLF.Imp <> :com::x_'-'_x not
R32560:32560 PLF.Imp <> X def
R32564:32564 PLF.Imp <> Y def
R32577:32580 PLF.Imp <> :com:com_scope:'skip' not
R32595:32598 PLF.Imp <> :com:com_scope:x_':='_x not
R32594:32594 PLF.Imp <> Y def
R32619:32627 PLF.Imp <> :com:com_scope:x_';'_x not
R32614:32617 PLF.Imp <> :com:com_scope:x_':='_x not
R32613:32613 PLF.Imp <> Y def
R32628:32633 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32641:32653 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32664:32674 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32634:32634 PLF.Imp <> :com:com_scope:'('_x_')' not
R32640:32640 PLF.Imp <> :com:com_scope:'('_x_')' not
R32636:32638 PLF.Imp <> :com::x_'='_x not
R32635:32635 PLF.Imp <> Y def
R32655:32658 PLF.Imp <> :com:com_scope:x_':='_x not
R32654:32654 PLF.Imp <> X def
R32660:32662 PLF.Imp <> :com::x_'+'_x not
R32659:32659 PLF.Imp <> X def
prf 32941:32965 <> fold_constants_aexp_sound
R32971:32982 PLF.Equiv <> atrans_sound def
R32984:33002 PLF.Equiv <> fold_constants_aexp def
R33021:33032 PLF.Equiv <> atrans_sound def
R33052:33057 PLF.Equiv <> aequiv def
R33468:33486 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
R33468:33486 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
R33468:33486 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
R33468:33486 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
R33512:33530 PLF.Equiv <> fold_constants_aexp def
prf 36459:36483 <> fold_constants_bexp_sound
R36488:36499 PLF.Equiv <> btrans_sound def
R36501:36519 PLF.Equiv <> fold_constants_bexp def
R36538:36549 PLF.Equiv <> btrans_sound def
R36569:36574 PLF.Equiv <> bequiv def
R36702:36720 PLF.Equiv <> fold_constants_aexp def
R36702:36720 PLF.Equiv <> fold_constants_aexp def
R36759:36777 PLF.Equiv <> fold_constants_aexp def
R36759:36777 PLF.Equiv <> fold_constants_aexp def
R36815:36819 PLF.Imp <> aeval def
R36834:36838 PLF.Imp <> aeval def
R36881:36905 PLF.Equiv <> fold_constants_aexp_sound thm
R36815:36819 PLF.Imp <> aeval def
R36834:36838 PLF.Imp <> aeval def
R36881:36905 PLF.Equiv <> fold_constants_aexp_sound thm
R36881:36905 PLF.Equiv <> fold_constants_aexp_sound thm
R36935:36939 PLF.Imp <> aeval def
R36954:36958 PLF.Imp <> aeval def
R37001:37025 PLF.Equiv <> fold_constants_aexp_sound thm
R36935:36939 PLF.Imp <> aeval def
R36954:36958 PLF.Imp <> aeval def
R37001:37025 PLF.Equiv <> fold_constants_aexp_sound thm
R37001:37025 PLF.Equiv <> fold_constants_aexp_sound thm
R37212:37215 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R37212:37215 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R37274:37292 PLF.Equiv <> fold_constants_aexp def
R37274:37292 PLF.Equiv <> fold_constants_aexp def
R37331:37349 PLF.Equiv <> fold_constants_aexp def
R37331:37349 PLF.Equiv <> fold_constants_aexp def
R37387:37391 PLF.Imp <> aeval def
R37406:37410 PLF.Imp <> aeval def
R37453:37477 PLF.Equiv <> fold_constants_aexp_sound thm
R37387:37391 PLF.Imp <> aeval def
R37406:37410 PLF.Imp <> aeval def
R37453:37477 PLF.Equiv <> fold_constants_aexp_sound thm
R37453:37477 PLF.Equiv <> fold_constants_aexp_sound thm
R37507:37511 PLF.Imp <> aeval def
R37526:37530 PLF.Imp <> aeval def
R37573:37597 PLF.Equiv <> fold_constants_aexp_sound thm
R37507:37511 PLF.Imp <> aeval def
R37526:37530 PLF.Imp <> aeval def
R37573:37597 PLF.Equiv <> fold_constants_aexp_sound thm
R37573:37597 PLF.Equiv <> fold_constants_aexp_sound thm
R37784:37787 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R37784:37787 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R37846:37864 PLF.Equiv <> fold_constants_aexp def
R37846:37864 PLF.Equiv <> fold_constants_aexp def
R37893:37911 PLF.Equiv <> fold_constants_aexp def
R37893:37911 PLF.Equiv <> fold_constants_aexp def
R37939:37943 PLF.Imp <> aeval def
R37958:37962 PLF.Imp <> aeval def
R38001:38025 PLF.Equiv <> fold_constants_aexp_sound thm
R37939:37943 PLF.Imp <> aeval def
R37958:37962 PLF.Imp <> aeval def
R38001:38025 PLF.Equiv <> fold_constants_aexp_sound thm
R38001:38025 PLF.Equiv <> fold_constants_aexp_sound thm
R38054:38058 PLF.Imp <> aeval def
R38073:38077 PLF.Imp <> aeval def
R38116:38140 PLF.Equiv <> fold_constants_aexp_sound thm
R38054:38058 PLF.Imp <> aeval def
R38073:38077 PLF.Imp <> aeval def
R38116:38140 PLF.Equiv <> fold_constants_aexp_sound thm
R38116:38140 PLF.Equiv <> fold_constants_aexp_sound thm
R38218:38222 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R38218:38222 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R38328:38346 PLF.Equiv <> fold_constants_aexp def
R38328:38346 PLF.Equiv <> fold_constants_aexp def
R38375:38393 PLF.Equiv <> fold_constants_aexp def
R38375:38393 PLF.Equiv <> fold_constants_aexp def
R38421:38425 PLF.Imp <> aeval def
R38440:38444 PLF.Imp <> aeval def
R38483:38507 PLF.Equiv <> fold_constants_aexp_sound thm
R38421:38425 PLF.Imp <> aeval def
R38440:38444 PLF.Imp <> aeval def
R38483:38507 PLF.Equiv <> fold_constants_aexp_sound thm
R38483:38507 PLF.Equiv <> fold_constants_aexp_sound thm
R38536:38540 PLF.Imp <> aeval def
R38555:38559 PLF.Imp <> aeval def
R38598:38622 PLF.Equiv <> fold_constants_aexp_sound thm
R38536:38540 PLF.Imp <> aeval def
R38555:38559 PLF.Imp <> aeval def
R38598:38622 PLF.Equiv <> fold_constants_aexp_sound thm
R38598:38622 PLF.Equiv <> fold_constants_aexp_sound thm
R38700:38704 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R38700:38704 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R38830:38848 PLF.Equiv <> fold_constants_bexp def
R38830:38848 PLF.Equiv <> fold_constants_bexp def
R38957:38975 PLF.Equiv <> fold_constants_bexp def
R38957:38975 PLF.Equiv <> fold_constants_bexp def
R39014:39032 PLF.Equiv <> fold_constants_bexp def
R39014:39032 PLF.Equiv <> fold_constants_bexp def
prf 39285:39308 <> fold_constants_com_sound
R39314:39325 PLF.Equiv <> ctrans_sound def
R39327:39344 PLF.Equiv <> fold_constants_com def
R39363:39374 PLF.Equiv <> ctrans_sound def
R39430:39440 PLF.Equiv <> refl_cequiv thm
R39430:39440 PLF.Equiv <> refl_cequiv thm
R39462:39477 PLF.Equiv <> CAsgn_congruence thm
R39462:39477 PLF.Equiv <> CAsgn_congruence thm
R39500:39524 PLF.Equiv <> fold_constants_aexp_sound thm
R39500:39524 PLF.Equiv <> fold_constants_aexp_sound thm
R39545:39559 PLF.Equiv <> CSeq_congruence prfax
R39545:39559 PLF.Equiv <> CSeq_congruence prfax
R39599:39604 PLF.Equiv <> bequiv def
R39609:39627 PLF.Equiv <> fold_constants_bexp def
R39599:39604 PLF.Equiv <> bequiv def
R39609:39627 PLF.Equiv <> fold_constants_bexp def
R39648:39672 PLF.Equiv <> fold_constants_bexp_sound thm
R39648:39672 PLF.Equiv <> fold_constants_bexp_sound thm
R39691:39709 PLF.Equiv <> fold_constants_bexp def
R39734:39747 PLF.Equiv <> CIf_congruence thm
R39691:39709 PLF.Equiv <> fold_constants_bexp def
R39734:39747 PLF.Equiv <> CIf_congruence thm
R39734:39747 PLF.Equiv <> CIf_congruence thm
R39734:39747 PLF.Equiv <> CIf_congruence thm
R39734:39747 PLF.Equiv <> CIf_congruence thm
R39734:39747 PLF.Equiv <> CIf_congruence thm
R39734:39747 PLF.Equiv <> CIf_congruence thm
R39734:39747 PLF.Equiv <> CIf_congruence thm
R39734:39747 PLF.Equiv <> CIf_congruence thm
R39959:39970 PLF.Equiv <> trans_cequiv thm
R39959:39970 PLF.Equiv <> trans_cequiv thm
R40009:40015 PLF.Equiv <> if_true thm
R40009:40015 PLF.Equiv <> if_true thm
R40069:40080 PLF.Equiv <> trans_cequiv thm
R40069:40080 PLF.Equiv <> trans_cequiv thm
R40119:40126 PLF.Equiv <> if_false thm
R40119:40126 PLF.Equiv <> if_false thm
R40169:40174 PLF.Equiv <> bequiv def
R40179:40197 PLF.Equiv <> fold_constants_bexp def
R40169:40174 PLF.Equiv <> bequiv def
R40179:40197 PLF.Equiv <> fold_constants_bexp def
R40218:40242 PLF.Equiv <> fold_constants_bexp_sound thm
R40218:40242 PLF.Equiv <> fold_constants_bexp_sound thm
R40261:40279 PLF.Equiv <> fold_constants_bexp def
R40304:40320 PLF.Equiv <> CWhile_congruence thm
R40261:40279 PLF.Equiv <> fold_constants_bexp def
R40304:40320 PLF.Equiv <> CWhile_congruence thm
R40304:40320 PLF.Equiv <> CWhile_congruence thm
R40304:40320 PLF.Equiv <> CWhile_congruence thm
R40304:40320 PLF.Equiv <> CWhile_congruence thm
R40304:40320 PLF.Equiv <> CWhile_congruence thm
R40304:40320 PLF.Equiv <> CWhile_congruence thm
R40304:40320 PLF.Equiv <> CWhile_congruence thm
R40304:40320 PLF.Equiv <> CWhile_congruence thm
R40348:40353 PLF.Equiv <> cequiv def
R40394:40411 PLF.Equiv <> while_true_nonterm thm
R40394:40411 PLF.Equiv <> while_true_nonterm thm
R40482:40499 PLF.Equiv <> while_true_nonterm thm
R40501:40505 PLF.Imp <> BTrue constr
R40507:40511 PLF.Imp <> CSkip constr
R40482:40499 PLF.Equiv <> while_true_nonterm thm
R40501:40505 PLF.Imp <> BTrue constr
R40507:40511 PLF.Imp <> CSkip constr
R40547:40557 PLF.Equiv <> refl_bequiv thm
R40547:40557 PLF.Equiv <> refl_bequiv thm
R40573:40583 PLF.Equiv <> while_false thm
R40573:40583 PLF.Equiv <> while_false thm
def 41649:41667 <> optimize_0plus_aexp
R41674:41677 PLF.Imp <> aexp ind
binder 41670:41670 <> a:122
R41682:41685 PLF.Imp <> aexp ind
def 41764:41782 <> optimize_0plus_bexp
R41789:41792 PLF.Imp <> bexp ind
binder 41785:41785 <> b:124
R41797:41800 PLF.Imp <> bexp ind
def 41879:41896 <> optimize_0plus_com
R41903:41905 PLF.Imp <> com ind
binder 41899:41899 <> c:126
R41910:41912 PLF.Imp <> com ind
def 41990:42008 <> test_optimize_0plus
R42081:42088 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42015:42032 PLF.Equiv <> optimize_0plus_com prfax
R42041:42043 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R42078:42080 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R42044:42049 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R42056:42059 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R42074:42077 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R42051:42054 PLF.Imp <> :com::x_'<>'_x not
R42050:42050 PLF.Imp <> X def
R42061:42064 PLF.Imp <> :com:com_scope:x_':='_x not
R42060:42060 PLF.Imp <> X def
R42070:42072 PLF.Imp <> :com::x_'-'_x not
R42066:42068 PLF.Imp <> :com::x_'+'_x not
R42069:42069 PLF.Imp <> X def
R42089:42091 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R42122:42124 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R42092:42097 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R42104:42107 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R42118:42121 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R42099:42102 PLF.Imp <> :com::x_'<>'_x not
R42098:42098 PLF.Imp <> X def
R42109:42112 PLF.Imp <> :com:com_scope:x_':='_x not
R42108:42108 PLF.Imp <> X def
R42114:42116 PLF.Imp <> :com::x_'-'_x not
R42113:42113 PLF.Imp <> X def
prf 42378:42402 <> optimize_0plus_aexp_sound
R42407:42418 PLF.Equiv <> atrans_sound def
R42420:42438 PLF.Equiv <> optimize_0plus_aexp prfax
prf 42488:42512 <> optimize_0plus_bexp_sound
R42518:42529 PLF.Equiv <> btrans_sound def
R42531:42549 PLF.Equiv <> optimize_0plus_bexp prfax
prf 42599:42622 <> optimize_0plus_com_sound
R42628:42639 PLF.Equiv <> ctrans_sound def
R42641:42658 PLF.Equiv <> optimize_0plus_com prfax
def 42902:42910 <> optimizer
R42917:42919 PLF.Imp <> com ind
binder 42913:42913 <> c:128
R42925:42942 PLF.Equiv <> optimize_0plus_com prfax
R42945:42962 PLF.Equiv <> fold_constants_com def
R42964:42964 PLF.Equiv <> c:128 var
prf 43021:43035 <> optimizer_sound
R43041:43052 PLF.Equiv <> ctrans_sound def
R43054:43062 PLF.Equiv <> optimizer def
def 44086:44095 <> subst_aexp
R44102:44107 Coq.Strings.String <> string ind
binder 44098:44098 <> x:129
R44115:44118 PLF.Imp <> aexp ind
binder 44111:44111 <> u:130
R44126:44129 PLF.Imp <> aexp ind
binder 44122:44122 <> a:131
R44134:44137 PLF.Imp <> aexp ind
R44150:44150 PLF.Equiv <> a:131 var
R44161:44164 PLF.Imp <> ANum constr
R44183:44186 PLF.Imp <> ANum constr
R44194:44196 PLF.Imp <> AId constr
R44219:44228 Coq.Strings.String <> eqb def
R44230:44230 PLF.Equiv <> x:129 var
R44247:44249 PLF.Imp <> AId constr
R44240:44240 PLF.Equiv <> u:130 var
R44258:44260 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44268:44270 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44263:44265 PLF.Imp <> :com::x_'+'_x not
R44282:44284 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44326:44328 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44304:44306 PLF.Imp <> :com::x_'+'_x not
R44285:44285 PLF.Imp <> :com:com_scope:'('_x_')' not
R44303:44303 PLF.Imp <> :com:com_scope:'('_x_')' not
R44296:44296 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44298:44298 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44300:44300 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44299:44299 PLF.Equiv <> u:130 var
R44297:44297 PLF.Equiv <> x:129 var
R44286:44295 PLF.Equiv <> subst_aexp:132 def
R44307:44307 PLF.Imp <> :com:com_scope:'('_x_')' not
R44325:44325 PLF.Imp <> :com:com_scope:'('_x_')' not
R44318:44318 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44320:44320 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44322:44322 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44321:44321 PLF.Equiv <> u:130 var
R44319:44319 PLF.Equiv <> x:129 var
R44308:44317 PLF.Equiv <> subst_aexp:132 def
R44334:44336 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44344:44346 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44339:44341 PLF.Imp <> :com::x_'-'_x not
R44357:44359 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44401:44403 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44379:44381 PLF.Imp <> :com::x_'-'_x not
R44360:44360 PLF.Imp <> :com:com_scope:'('_x_')' not
R44378:44378 PLF.Imp <> :com:com_scope:'('_x_')' not
R44371:44371 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44373:44373 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44375:44375 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44374:44374 PLF.Equiv <> u:130 var
R44372:44372 PLF.Equiv <> x:129 var
R44361:44370 PLF.Equiv <> subst_aexp:132 def
R44382:44382 PLF.Imp <> :com:com_scope:'('_x_')' not
R44400:44400 PLF.Imp <> :com:com_scope:'('_x_')' not
R44393:44393 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44395:44395 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44397:44397 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44396:44396 PLF.Equiv <> u:130 var
R44394:44394 PLF.Equiv <> x:129 var
R44383:44392 PLF.Equiv <> subst_aexp:132 def
R44409:44411 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44419:44421 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44414:44416 PLF.Imp <> :com::x_'*'_x not
R44433:44435 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44477:44479 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44455:44457 PLF.Imp <> :com::x_'*'_x not
R44436:44436 PLF.Imp <> :com:com_scope:'('_x_')' not
R44454:44454 PLF.Imp <> :com:com_scope:'('_x_')' not
R44447:44447 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44449:44449 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44451:44451 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44450:44450 PLF.Equiv <> u:130 var
R44448:44448 PLF.Equiv <> x:129 var
R44437:44446 PLF.Equiv <> subst_aexp:132 def
R44458:44458 PLF.Imp <> :com:com_scope:'('_x_')' not
R44476:44476 PLF.Imp <> :com:com_scope:'('_x_')' not
R44469:44469 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44471:44471 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44473:44473 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44472:44472 PLF.Equiv <> u:130 var
R44470:44470 PLF.Equiv <> x:129 var
R44459:44468 PLF.Equiv <> subst_aexp:132 def
def 44497:44509 <> subst_aexp_ex
R44549:44553 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44515:44524 PLF.Equiv <> subst_aexp def
R44526:44526 PLF.Imp <> X def
R44528:44529 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44537:44538 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44532:44534 PLF.Imp <> :com::x_'+'_x not
R44540:44541 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44547:44548 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44543:44545 PLF.Imp <> :com::x_'+'_x not
R44542:44542 PLF.Imp <> Y def
R44546:44546 PLF.Imp <> X def
R44554:44556 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44570:44571 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44558:44560 PLF.Imp <> :com::x_'+'_x not
R44557:44557 PLF.Imp <> Y def
R44561:44561 PLF.Imp <> :com:com_scope:'('_x_')' not
R44569:44569 PLF.Imp <> :com:com_scope:'('_x_')' not
R44564:44566 PLF.Imp <> :com::x_'+'_x not
def 44773:44792 <> subst_equiv_property
binder 44811:44812 <> x1:134
binder 44814:44815 <> x2:135
binder 44817:44818 <> a1:136
binder 44820:44821 <> a2:137
R44826:44831 PLF.Equiv <> cequiv def
R44833:44835 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44854:44856 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44844:44845 PLF.Imp <> :com:com_scope:x_';'_x not
R44838:44841 PLF.Imp <> :com:com_scope:x_':='_x not
R44836:44837 PLF.Equiv <> x1:134 var
R44842:44843 PLF.Equiv <> a1:136 var
R44848:44851 PLF.Imp <> :com:com_scope:x_':='_x not
R44846:44847 PLF.Equiv <> x2:135 var
R44852:44853 PLF.Equiv <> a2:137 var
R44867:44869 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44905:44907 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44878:44879 PLF.Imp <> :com:com_scope:x_';'_x not
R44872:44875 PLF.Imp <> :com:com_scope:x_':='_x not
R44870:44871 PLF.Equiv <> x1:134 var
R44876:44877 PLF.Equiv <> a1:136 var
R44882:44885 PLF.Imp <> :com:com_scope:x_':='_x not
R44880:44881 PLF.Equiv <> x2:135 var
R44896:44896 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44899:44899 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44902:44902 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44903:44904 PLF.Equiv <> a2:137 var
R44900:44901 PLF.Equiv <> a1:136 var
R44897:44898 PLF.Equiv <> x1:134 var
R44886:44895 PLF.Equiv <> subst_aexp def
prf 45141:45153 <> subst_inequiv
R45159:45160 Coq.Init.Logic <> ::type_scope:'~'_x not
R45161:45180 PLF.Equiv <> subst_equiv_property def
R45199:45218 PLF.Equiv <> subst_equiv_property def
R45400:45402 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R45435:45437 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R45413:45428 PLF.Imp <> :com:com_scope:x_';'_x not
R45404:45407 PLF.Imp <> :com:com_scope:x_':='_x not
R45403:45403 PLF.Imp <> X def
R45409:45411 PLF.Imp <> :com::x_'+'_x not
R45408:45408 PLF.Imp <> X def
R45430:45433 PLF.Imp <> :com:com_scope:x_':='_x not
R45429:45429 PLF.Imp <> Y def
R45434:45434 PLF.Imp <> X def
R45400:45402 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R45435:45437 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R45413:45428 PLF.Imp <> :com:com_scope:x_';'_x not
R45404:45407 PLF.Imp <> :com:com_scope:x_':='_x not
R45403:45403 PLF.Imp <> X def
R45409:45411 PLF.Imp <> :com::x_'+'_x not
R45408:45408 PLF.Imp <> X def
R45430:45433 PLF.Imp <> :com:com_scope:x_':='_x not
R45429:45429 PLF.Imp <> Y def
R45434:45434 PLF.Imp <> X def
R45463:45465 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R45502:45504 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R45476:45491 PLF.Imp <> :com:com_scope:x_';'_x not
R45467:45470 PLF.Imp <> :com:com_scope:x_':='_x not
R45466:45466 PLF.Imp <> X def
R45472:45474 PLF.Imp <> :com::x_'+'_x not
R45471:45471 PLF.Imp <> X def
R45493:45496 PLF.Imp <> :com:com_scope:x_':='_x not
R45492:45492 PLF.Imp <> Y def
R45498:45500 PLF.Imp <> :com::x_'+'_x not
R45497:45497 PLF.Imp <> X def
R45463:45465 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R45502:45504 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R45476:45491 PLF.Imp <> :com:com_scope:x_';'_x not
R45467:45470 PLF.Imp <> :com:com_scope:x_':='_x not
R45466:45466 PLF.Imp <> X def
R45472:45474 PLF.Imp <> :com::x_'+'_x not
R45471:45471 PLF.Imp <> X def
R45493:45496 PLF.Imp <> :com:com_scope:x_':='_x not
R45492:45492 PLF.Imp <> Y def
R45498:45500 PLF.Imp <> :com::x_'+'_x not
R45497:45497 PLF.Imp <> X def
R45529:45534 PLF.Equiv <> cequiv def
R45529:45534 PLF.Equiv <> cequiv def
R45770:45774 PLF.Maps <> :::x_'!->'_x_';'_x not
R45776:45778 PLF.Maps <> :::x_'!->'_x_';'_x not
R45780:45784 PLF.Imp <> :::x_'!->'_x not
R45779:45779 PLF.Imp <> X def
R45769:45769 PLF.Imp <> Y def
R45770:45774 PLF.Maps <> :::x_'!->'_x_';'_x not
R45776:45778 PLF.Maps <> :::x_'!->'_x_';'_x not
R45780:45784 PLF.Imp <> :::x_'!->'_x not
R45779:45779 PLF.Imp <> X def
R45769:45769 PLF.Imp <> Y def
R45809:45813 PLF.Maps <> :::x_'!->'_x_';'_x not
R45815:45817 PLF.Maps <> :::x_'!->'_x_';'_x not
R45819:45823 PLF.Imp <> :::x_'!->'_x not
R45818:45818 PLF.Imp <> X def
R45808:45808 PLF.Imp <> Y def
R45809:45813 PLF.Maps <> :::x_'!->'_x_';'_x not
R45815:45817 PLF.Maps <> :::x_'!->'_x_';'_x not
R45819:45823 PLF.Imp <> :::x_'!->'_x not
R45818:45818 PLF.Imp <> X def
R45808:45808 PLF.Imp <> Y def
R45858:45861 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45864:45868 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45850:45857 PLF.Imp <> empty_st def
R45898:45901 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45904:45908 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45890:45897 PLF.Imp <> empty_st def
R45963:45967 PLF.Imp <> :::x_'!->'_x not
R45962:45962 PLF.Imp <> X def
R45942:45946 PLF.Imp <> E_Seq constr
R45986:45991 PLF.Imp <> E_Asgn constr
R45858:45861 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45864:45868 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45850:45857 PLF.Imp <> empty_st def
R45898:45901 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45904:45908 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45890:45897 PLF.Imp <> empty_st def
R45898:45901 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45904:45908 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45890:45897 PLF.Imp <> empty_st def
R45963:45967 PLF.Imp <> :::x_'!->'_x not
R45962:45962 PLF.Imp <> X def
R45942:45946 PLF.Imp <> E_Seq constr
R45986:45991 PLF.Imp <> E_Asgn constr
R45986:45991 PLF.Imp <> E_Asgn constr
R45963:45967 PLF.Imp <> :::x_'!->'_x not
R45962:45962 PLF.Imp <> X def
R45942:45946 PLF.Imp <> E_Seq constr
R45986:45991 PLF.Imp <> E_Asgn constr
R45986:45991 PLF.Imp <> E_Asgn constr
R45963:45967 PLF.Imp <> :::x_'!->'_x not
R45962:45962 PLF.Imp <> X def
R45942:45946 PLF.Imp <> E_Seq constr
R45986:45991 PLF.Imp <> E_Asgn constr
R45986:45991 PLF.Imp <> E_Asgn constr
R45963:45967 PLF.Imp <> :::x_'!->'_x not
R45962:45962 PLF.Imp <> X def
R45942:45946 PLF.Imp <> E_Seq constr
R46180:46182 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46203:46221 PLF.Imp <> ceval_deterministic thm
R46226:46233 PLF.Imp <> empty_st def
R46180:46182 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46203:46221 PLF.Imp <> ceval_deterministic thm
R46226:46233 PLF.Imp <> empty_st def
R46292:46294 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46291:46291 PLF.Imp <> Y def
R46299:46299 PLF.Imp <> Y def
R46292:46294 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46291:46291 PLF.Imp <> Y def
R46299:46299 PLF.Imp <> Y def
ind 46716:46735 <> var_not_used_in_aexp
constr 46772:46777 <> VNUNum
constr 46827:46831 <> VNUId
constr 46890:46896 <> VNUPlus
constr 47033:47040 <> VNUMinus
constr 47177:47183 <> VNUMult
R46742:46747 Coq.Strings.String <> string ind
binder 46738:46738 <> x:138
R46756:46759 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46752:46755 PLF.Imp <> aexp ind
binder 46788:46788 <> n:141
R46791:46810 PLF.Equiv <> var_not_used_in_aexp:139 ind
R46815:46818 PLF.Imp <> ANum constr
R46820:46820 PLF.Equiv <> n:141 var
R46812:46812 PLF.Equiv <> x:138 var
binder 46842:46842 <> y:142
R46851:46854 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46846:46849 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R46845:46845 PLF.Equiv <> x:138 var
R46850:46850 PLF.Equiv <> y:142 var
R46855:46874 PLF.Equiv <> var_not_used_in_aexp:139 ind
R46879:46881 PLF.Imp <> AId constr
R46883:46883 PLF.Equiv <> y:142 var
R46876:46876 PLF.Equiv <> x:138 var
binder 46907:46908 <> a1:143
binder 46910:46911 <> a2:144
R46945:46954 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46920:46939 PLF.Equiv <> var_not_used_in_aexp:139 ind
R46943:46944 PLF.Equiv <> a1:143 var
R46941:46941 PLF.Equiv <> x:138 var
R46980:46989 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46955:46974 PLF.Equiv <> var_not_used_in_aexp:139 ind
R46978:46979 PLF.Equiv <> a2:144 var
R46976:46976 PLF.Equiv <> x:138 var
R46990:47009 PLF.Equiv <> var_not_used_in_aexp:139 ind
R47014:47016 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47024:47026 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47019:47021 PLF.Imp <> :com::x_'+'_x not
R47017:47018 PLF.Equiv <> a1:143 var
R47022:47023 PLF.Equiv <> a2:144 var
R47011:47011 PLF.Equiv <> x:138 var
binder 47051:47052 <> a1:145
binder 47054:47055 <> a2:146
R47089:47098 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47064:47083 PLF.Equiv <> var_not_used_in_aexp:139 ind
R47087:47088 PLF.Equiv <> a1:145 var
R47085:47085 PLF.Equiv <> x:138 var
R47124:47133 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47099:47118 PLF.Equiv <> var_not_used_in_aexp:139 ind
R47122:47123 PLF.Equiv <> a2:146 var
R47120:47120 PLF.Equiv <> x:138 var
R47134:47153 PLF.Equiv <> var_not_used_in_aexp:139 ind
R47158:47160 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47168:47170 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47163:47165 PLF.Imp <> :com::x_'-'_x not
R47161:47162 PLF.Equiv <> a1:145 var
R47166:47167 PLF.Equiv <> a2:146 var
R47155:47155 PLF.Equiv <> x:138 var
binder 47194:47195 <> a1:147
binder 47197:47198 <> a2:148
R47232:47241 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47207:47226 PLF.Equiv <> var_not_used_in_aexp:139 ind
R47230:47231 PLF.Equiv <> a1:147 var
R47228:47228 PLF.Equiv <> x:138 var
R47267:47276 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47242:47261 PLF.Equiv <> var_not_used_in_aexp:139 ind
R47265:47266 PLF.Equiv <> a2:148 var
R47263:47263 PLF.Equiv <> x:138 var
R47277:47296 PLF.Equiv <> var_not_used_in_aexp:139 ind
R47301:47303 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47311:47313 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47306:47308 PLF.Imp <> :com::x_'*'_x not
R47304:47305 PLF.Equiv <> a1:147 var
R47309:47310 PLF.Equiv <> a2:148 var
R47298:47298 PLF.Equiv <> x:138 var
prf 47324:47338 <> aeval_weakening
binder 47349:47349 <> x:149
binder 47351:47352 <> st:150
binder 47354:47354 <> a:151
binder 47356:47357 <> ni:152
R47386:47391 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47362:47381 PLF.Equiv <> var_not_used_in_aexp ind
R47383:47383 PLF.Equiv <> x:149 var
R47385:47385 PLF.Equiv <> a:151 var
R47415:47417 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47392:47396 PLF.Imp <> aeval def
R47400:47404 PLF.Maps <> :::x_'!->'_x_';'_x not
R47407:47409 PLF.Maps <> :::x_'!->'_x_';'_x not
R47410:47411 PLF.Equiv <> st:150 var
R47399:47399 PLF.Equiv <> x:149 var
R47405:47406 PLF.Equiv <> ni:152 var
R47414:47414 PLF.Equiv <> a:151 var
R47418:47422 PLF.Imp <> aeval def
R47424:47425 PLF.Equiv <> st:150 var
R47427:47427 PLF.Equiv <> a:151 var
prf 47733:47748 <> inequiv_exercise
R47753:47754 Coq.Init.Logic <> ::type_scope:'~'_x not
R47755:47760 PLF.Equiv <> cequiv def
R47762:47764 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47787:47789 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47765:47770 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R47775:47778 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R47783:47786 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R47771:47774 PLF.Imp <> :com::'true' not
R47779:47782 PLF.Imp <> :com:com_scope:'skip' not
R47791:47793 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47798:47800 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47794:47797 PLF.Imp <> :com:com_scope:'skip' not
mod 49907:49910 <> Himp
ind 50008:50010 Himp com
constr 50026:50030 Himp CSkip
constr 50042:50046 Himp CAsgn
constr 50076:50079 Himp CSeq
constr 50105:50107 Himp CIf
constr 50141:50146 Himp CWhile
constr 50173:50178 Himp CHavoc
R50034:50036 PLF.Equiv <> com:153 ind
R50056:50059 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50050:50055 Coq.Strings.String <> string ind
R50064:50067 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50060:50063 PLF.Imp <> aexp ind
R50068:50070 PLF.Equiv <> com:153 ind
R50086:50089 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50083:50085 PLF.Equiv <> com:153 ind
R50093:50096 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50090:50092 PLF.Equiv <> com:153 ind
R50097:50099 PLF.Equiv <> com:153 ind
R50115:50118 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50111:50114 PLF.Imp <> bexp ind
R50122:50125 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50119:50121 PLF.Equiv <> com:153 ind
R50129:50132 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50126:50128 PLF.Equiv <> com:153 ind
R50133:50135 PLF.Equiv <> com:153 ind
R50154:50157 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50150:50153 PLF.Imp <> bexp ind
R50161:50164 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50158:50160 PLF.Equiv <> com:153 ind
R50165:50167 PLF.Equiv <> com:153 ind
R50188:50191 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50182:50187 Coq.Strings.String <> string ind
R50192:50194 PLF.Equiv <> com:153 ind
R50253:50258 PLF.Equiv Himp CHavoc constr
not 50237:50237 Himp :com::'havoc'_x
R50370:50374 PLF.Equiv Himp CSkip constr
not 50348:50348 Himp :com::'skip'
R50436:50440 PLF.Equiv Himp CAsgn constr
not 50413:50413 Himp :com::x_':='_x
R50584:50587 PLF.Equiv Himp CSeq constr
not 50563:50563 Himp :com::x_';'_x
R50710:50712 PLF.Equiv Himp CIf constr
not 50664:50664 Himp :com::'if'_x_'then'_x_'else'_x_'end'
R50865:50870 PLF.Equiv Himp CWhile constr
not 50827:50827 Himp :com::'while'_x_'do'_x_'end'
ind 51413:51417 Himp ceval
constr 51458:51463 Himp E_Skip
constr 51506:51511 Himp E_Asgn
constr 51599:51603 Himp E_Seq
constr 51723:51730 Himp E_IfTrue
constr 51859:51867 Himp E_IfFalse
constr 51997:52008 Himp E_WhileFalse
constr 52095:52105 Himp E_WhileTrue
R51424:51427 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51421:51423 PLF.Equiv Himp com ind
R51433:51436 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51428:51432 PLF.Imp <> state def
R51442:51445 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51437:51441 PLF.Imp <> state def
R52317:52321 PLF.Equiv <> ceval:156 ind
binder 51474:51475 <> st:157
R51486:51489 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51494:51498 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51490:51493 PLF.Equiv Himp :com::'skip' not
R51484:51485 PLF.Equiv <> st:157 var
R51499:51500 PLF.Equiv <> st:157 var
binder 51523:51524 <> st:158
binder 51526:51526 <> a:159
binder 51528:51528 <> n:160
binder 51530:51530 <> x:161
R51553:51562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51549:51551 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51539:51543 PLF.Imp <> aeval def
R51545:51546 PLF.Equiv <> st:158 var
R51548:51548 PLF.Equiv <> a:159 var
R51552:51552 PLF.Equiv <> n:160 var
R51565:51568 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51575:51580 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51593:51593 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51570:51573 PLF.Equiv Himp :com::x_':='_x not
R51569:51569 PLF.Equiv <> x:161 var
R51574:51574 PLF.Equiv <> a:159 var
R51563:51564 PLF.Equiv <> st:158 var
R51582:51586 PLF.Maps <> :::x_'!->'_x_';'_x not
R51588:51590 PLF.Maps <> :::x_'!->'_x_';'_x not
R51591:51592 PLF.Equiv <> st:158 var
R51581:51581 PLF.Equiv <> x:161 var
R51587:51587 PLF.Equiv <> n:160 var
binder 51614:51615 <> c1:162
binder 51617:51618 <> c2:163
binder 51620:51621 <> st:164
binder 51623:51625 <> st':165
binder 51627:51630 <> st'':166
R51656:51666 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51641:51645 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51648:51652 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51646:51647 PLF.Equiv <> c1:162 var
R51639:51640 PLF.Equiv <> st:164 var
R51653:51655 PLF.Equiv <> st':165 var
R51685:51694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51670:51673 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51676:51680 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51674:51675 PLF.Equiv <> c2:163 var
R51667:51669 PLF.Equiv <> st':165 var
R51681:51684 PLF.Equiv <> st'':166 var
R51697:51701 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51709:51713 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51704:51706 PLF.Equiv Himp :com::x_';'_x not
R51702:51703 PLF.Equiv <> c1:162 var
R51707:51708 PLF.Equiv <> c2:163 var
R51695:51696 PLF.Equiv <> st:164 var
R51714:51717 PLF.Equiv <> st'':166 var
binder 51741:51742 <> st:167
binder 51744:51746 <> st':168
binder 51748:51748 <> b:169
binder 51750:51751 <> c1:170
binder 51753:51754 <> c2:171
R51780:51789 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51773:51775 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51763:51767 PLF.Imp <> beval def
R51769:51770 PLF.Equiv <> st:167 var
R51772:51772 PLF.Equiv <> b:169 var
R51776:51779 PLF.Imp <> :::'true' not
R51806:51815 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51792:51795 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51798:51802 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51796:51797 PLF.Equiv <> c1:170 var
R51790:51791 PLF.Equiv <> st:167 var
R51803:51805 PLF.Equiv <> st':168 var
R51818:51821 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51846:51850 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51822:51824 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51826:51831 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51834:51839 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51842:51845 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51825:51825 PLF.Equiv <> b:169 var
R51832:51833 PLF.Equiv <> c1:170 var
R51840:51841 PLF.Equiv <> c2:171 var
R51816:51817 PLF.Equiv <> st:167 var
R51851:51853 PLF.Equiv <> st':168 var
binder 51878:51879 <> st:172
binder 51881:51883 <> st':173
binder 51885:51885 <> b:174
binder 51887:51888 <> c1:175
binder 51890:51891 <> c2:176
R51918:51927 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51910:51912 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51900:51904 PLF.Imp <> beval def
R51906:51907 PLF.Equiv <> st:172 var
R51909:51909 PLF.Equiv <> b:174 var
R51913:51917 PLF.Imp <> :::'false' not
R51944:51953 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51930:51933 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51936:51940 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51934:51935 PLF.Equiv <> c2:176 var
R51928:51929 PLF.Equiv <> st:172 var
R51941:51943 PLF.Equiv <> st':173 var
R51956:51959 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51984:51988 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51960:51962 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51964:51969 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51972:51977 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51980:51983 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51963:51963 PLF.Equiv <> b:174 var
R51970:51971 PLF.Equiv <> c1:175 var
R51978:51979 PLF.Equiv <> c2:176 var
R51954:51955 PLF.Equiv <> st:172 var
R51989:51991 PLF.Equiv <> st':173 var
binder 52019:52019 <> b:177
binder 52021:52022 <> st:178
binder 52024:52024 <> c:179
R52051:52060 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52043:52045 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52033:52037 PLF.Imp <> beval def
R52039:52040 PLF.Equiv <> st:178 var
R52042:52042 PLF.Equiv <> b:177 var
R52046:52050 PLF.Imp <> :::'false' not
R52063:52066 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52083:52087 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52067:52072 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R52074:52077 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R52079:52082 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R52073:52073 PLF.Equiv <> b:177 var
R52078:52078 PLF.Equiv <> c:179 var
R52061:52062 PLF.Equiv <> st:178 var
R52088:52089 PLF.Equiv <> st:178 var
binder 52116:52117 <> st:180
binder 52119:52121 <> st':181
binder 52123:52126 <> st'':182
binder 52128:52128 <> b:183
binder 52130:52130 <> c:184
R52156:52165 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52149:52151 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52139:52143 PLF.Imp <> beval def
R52145:52146 PLF.Equiv <> st:180 var
R52148:52148 PLF.Equiv <> b:183 var
R52152:52155 PLF.Imp <> :::'true' not
R52182:52191 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52168:52172 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52174:52178 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52173:52173 PLF.Equiv <> c:184 var
R52166:52167 PLF.Equiv <> st:180 var
R52179:52181 PLF.Equiv <> st':181 var
R52224:52233 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52195:52198 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52215:52219 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52199:52204 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R52206:52209 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R52211:52214 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R52205:52205 PLF.Equiv <> b:183 var
R52210:52210 PLF.Equiv <> c:184 var
R52192:52194 PLF.Equiv <> st':181 var
R52220:52223 PLF.Equiv <> st'':182 var
R52236:52240 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52257:52261 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52241:52246 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R52248:52251 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R52253:52256 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R52247:52247 PLF.Equiv <> b:183 var
R52252:52252 PLF.Equiv <> c:184 var
R52234:52235 PLF.Equiv <> st:180 var
R52262:52265 PLF.Equiv <> st'':182 var
R52317:52321 PLF.Equiv Himp ceval ind
not 52295:52295 Himp :::x_'=['_x_']=>'_x
def 52435:52448 Himp havoc_example1
R52460:52463 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52471:52476 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52484:52484 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52464:52469 PLF.Equiv Himp :com::'havoc'_x not
R52470:52470 PLF.Imp <> X def
R52452:52459 PLF.Imp <> empty_st def
R52478:52482 PLF.Imp <> :::x_'!->'_x not
R52477:52477 PLF.Imp <> X def
def 52532:52545 Himp havoc_example2
R52559:52562 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52576:52581 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52590:52590 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52567:52568 PLF.Equiv Himp :com::x_';'_x not
R52563:52566 PLF.Equiv Himp :com::'skip' not
R52569:52574 PLF.Equiv Himp :com::'havoc'_x not
R52575:52575 PLF.Imp <> Z def
R52551:52558 PLF.Imp <> empty_st def
R52583:52587 PLF.Imp <> :::x_'!->'_x not
R52582:52582 PLF.Imp <> Z def
def 52681:52717 Himp manual_grade_for_Check_rule_for_HAVOC
R52721:52726 Coq.Init.Datatypes <> option ind
R52732:52732 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52729:52731 Coq.Init.Datatypes <> nat ind
R52733:52738 Coq.Strings.String <> string ind
R52744:52747 Coq.Init.Datatypes <> None constr
def 52849:52854 Himp cequiv
R52865:52867 PLF.Equiv Himp com ind
binder 52857:52858 <> c1:185
binder 52860:52861 <> c2:186
R52896:52900 PLF.Imp <> state def
binder 52887:52888 <> st:187
binder 52890:52892 <> st':188
R52921:52925 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R52907:52910 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52913:52917 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52911:52912 PLF.Equiv <> c1:185 var
R52905:52906 PLF.Equiv <> st:187 var
R52918:52920 PLF.Equiv <> st':188 var
R52928:52931 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52934:52938 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52932:52933 PLF.Equiv <> c2:186 var
R52926:52927 PLF.Equiv <> st:187 var
R52939:52941 PLF.Equiv <> st':188 var
def 53165:53167 Himp pXY
R53174:53176 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R53194:53196 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R53184:53186 PLF.Equiv Himp :com::x_';'_x not
R53177:53182 PLF.Equiv Himp :com::'havoc'_x not
R53183:53183 PLF.Imp <> X def
R53187:53192 PLF.Equiv Himp :com::'havoc'_x not
R53193:53193 PLF.Imp <> Y def
def 53211:53213 Himp pYX
R53220:53222 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R53239:53241 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R53230:53231 PLF.Equiv Himp :com::x_';'_x not
R53223:53228 PLF.Equiv Himp :com::'havoc'_x not
R53229:53229 PLF.Imp <> Y def
R53232:53237 PLF.Equiv Himp :com::'havoc'_x not
R53238:53238 PLF.Imp <> X def
prf 53348:53361 Himp pXY_cequiv_pYX
R53381:53384 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R53367:53372 PLF.Equiv Himp cequiv def
R53374:53376 PLF.Equiv Himp pXY def
R53378:53380 PLF.Equiv Himp pYX def
R53385:53385 Coq.Init.Logic <> ::type_scope:'~'_x not
R53386:53391 PLF.Equiv Himp cequiv def
R53393:53395 PLF.Equiv Himp pXY def
R53397:53399 PLF.Equiv Himp pYX def
def 53767:53772 Himp ptwice
R53779:53781 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R53798:53800 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R53789:53790 PLF.Equiv Himp :com::x_';'_x not
R53782:53787 PLF.Equiv Himp :com::'havoc'_x not
R53788:53788 PLF.Imp <> X def
R53791:53796 PLF.Equiv Himp :com::'havoc'_x not
R53797:53797 PLF.Imp <> Y def
def 53815:53819 Himp pcopy
R53826:53828 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R53844:53846 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R53836:53837 PLF.Equiv Himp :com::x_';'_x not
R53829:53834 PLF.Equiv Himp :com::'havoc'_x not
R53835:53835 PLF.Imp <> X def
R53839:53842 PLF.Equiv Himp :com::x_':='_x not
R53838:53838 PLF.Imp <> Y def
R53843:53843 PLF.Imp <> X def
prf 54017:54035 Himp ptwice_cequiv_pcopy
R54060:54063 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R54041:54046 PLF.Equiv Himp cequiv def
R54048:54053 PLF.Equiv Himp ptwice def
R54055:54059 PLF.Equiv Himp pcopy def
R54064:54064 Coq.Init.Logic <> ::type_scope:'~'_x not
R54065:54070 PLF.Equiv Himp cequiv def
R54072:54077 PLF.Equiv Himp ptwice def
R54079:54083 PLF.Equiv Himp pcopy def
def 54783:54784 Himp p1
R54788:54790 PLF.Equiv Himp com ind
R54797:54799 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R54861:54863 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R54800:54805 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R54815:54825 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R54852:54860 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R54806:54807 PLF.Imp <> :com::'~'_x not
R54808:54808 PLF.Imp <> :com:com_scope:'('_x_')' not
R54814:54814 PLF.Imp <> :com:com_scope:'('_x_')' not
R54810:54812 PLF.Imp <> :com::x_'='_x not
R54809:54809 PLF.Imp <> X def
R54833:54841 PLF.Equiv Himp :com::x_';'_x not
R54826:54831 PLF.Equiv Himp :com::'havoc'_x not
R54832:54832 PLF.Imp <> Y def
R54843:54846 PLF.Equiv Himp :com::x_':='_x not
R54842:54842 PLF.Imp <> X def
R54848:54850 PLF.Imp <> :com::x_'+'_x not
R54847:54847 PLF.Imp <> X def
def 54878:54879 Himp p2
R54883:54885 PLF.Equiv Himp com ind
R54892:54894 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R54934:54936 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R54895:54900 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R54910:54920 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R54925:54933 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R54901:54902 PLF.Imp <> :com::'~'_x not
R54903:54903 PLF.Imp <> :com:com_scope:'('_x_')' not
R54909:54909 PLF.Imp <> :com:com_scope:'('_x_')' not
R54905:54907 PLF.Imp <> :com::x_'='_x not
R54904:54904 PLF.Imp <> X def
R54921:54924 PLF.Equiv Himp :com::'skip' not
prf 55198:55211 Himp p1_may_diverge
binder 55222:55223 <> st:189
binder 55225:55227 <> st':190
R55239:55244 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55234:55237 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R55230:55231 PLF.Equiv <> st:189 var
R55233:55233 PLF.Imp <> X def
R55245:55246 Coq.Init.Logic <> ::type_scope:'~'_x not
R55249:55252 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R55255:55259 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R55253:55254 PLF.Equiv Himp p1 def
R55247:55248 PLF.Equiv <> st:189 var
R55260:55262 PLF.Equiv <> st':190 var
prf 55308:55321 Himp p2_may_diverge
binder 55332:55333 <> st:191
binder 55335:55337 <> st':192
R55349:55354 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55344:55347 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R55340:55341 PLF.Equiv <> st:191 var
R55343:55343 PLF.Imp <> X def
R55355:55356 Coq.Init.Logic <> ::type_scope:'~'_x not
R55359:55362 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R55365:55369 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R55363:55364 PLF.Equiv Himp p2 def
R55357:55358 PLF.Equiv <> st:191 var
R55370:55372 PLF.Equiv <> st':192 var
prf 55568:55578 Himp p1_p2_equiv
R55582:55587 PLF.Equiv Himp cequiv def
R55589:55590 PLF.Equiv Himp p1 def
R55592:55593 PLF.Equiv Himp p2 def
def 55861:55862 Himp p3
R55866:55868 PLF.Equiv Himp com ind
R55875:55877 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R55946:55948 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R55884:55890 PLF.Equiv Himp :com::x_';'_x not
R55879:55882 PLF.Equiv Himp :com::x_':='_x not
R55878:55878 PLF.Imp <> Z def
R55891:55896 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R55903:55913 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R55937:55945 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R55898:55901 PLF.Imp <> :com::x_'<>'_x not
R55897:55897 PLF.Imp <> X def
R55921:55929 PLF.Equiv Himp :com::x_';'_x not
R55914:55919 PLF.Equiv Himp :com::'havoc'_x not
R55920:55920 PLF.Imp <> X def
R55930:55935 PLF.Equiv Himp :com::'havoc'_x not
R55936:55936 PLF.Imp <> Z def
def 55963:55964 Himp p4
R55968:55970 PLF.Equiv Himp com ind
R55977:55979 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R55999:56001 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R55986:55992 PLF.Equiv Himp :com::x_';'_x not
R55981:55984 PLF.Equiv Himp :com::x_':='_x not
R55980:55980 PLF.Imp <> X def
R55994:55997 PLF.Equiv Himp :com::x_':='_x not
R55993:55993 PLF.Imp <> Z def
prf 56013:56025 Himp p3_p4_inequiv
R56029:56030 Coq.Init.Logic <> ::type_scope:'~'_x not
R56031:56036 PLF.Equiv Himp cequiv def
R56038:56039 PLF.Equiv Himp p3 def
R56041:56042 PLF.Equiv Himp p4 def
def 56647:56648 Himp p5
R56652:56654 PLF.Equiv Himp com ind
R56661:56663 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R56703:56705 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R56664:56669 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R56676:56686 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R56694:56702 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R56671:56674 PLF.Imp <> :com::x_'<>'_x not
R56670:56670 PLF.Imp <> X def
R56687:56692 PLF.Equiv Himp :com::'havoc'_x not
R56693:56693 PLF.Imp <> X def
def 56720:56721 Himp p6
R56725:56727 PLF.Equiv Himp com ind
R56734:56736 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R56743:56745 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R56738:56741 PLF.Equiv Himp :com::x_':='_x not
R56737:56737 PLF.Imp <> X def
prf 56757:56767 Himp p5_p6_equiv
R56771:56776 PLF.Equiv Himp cequiv def
R56778:56779 PLF.Equiv Himp p5 def
R56781:56782 PLF.Equiv Himp p6 def
R56836:56839 PLF.Equiv Himp <> mod
prf 57106:57136 <> swap_noninterfering_assignments
binder 57146:57147 <> l1:193
binder 57149:57150 <> l2:194
binder 57152:57153 <> a1:195
binder 57155:57156 <> a2:196
R57169:57174 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57163:57166 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R57161:57162 PLF.Equiv <> l1:193 var
R57167:57168 PLF.Equiv <> l2:194 var
R57201:57206 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57175:57194 PLF.Equiv <> var_not_used_in_aexp ind
R57196:57197 PLF.Equiv <> l1:193 var
R57199:57200 PLF.Equiv <> a2:196 var
R57233:57238 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57207:57226 PLF.Equiv <> var_not_used_in_aexp ind
R57228:57229 PLF.Equiv <> l2:194 var
R57231:57232 PLF.Equiv <> a1:195 var
R57239:57244 PLF.Equiv <> cequiv def
R57250:57252 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R57271:57273 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R57261:57262 PLF.Imp <> :com:com_scope:x_';'_x not
R57255:57258 PLF.Imp <> :com:com_scope:x_':='_x not
R57253:57254 PLF.Equiv <> l1:193 var
R57259:57260 PLF.Equiv <> a1:195 var
R57265:57268 PLF.Imp <> :com:com_scope:x_':='_x not
R57263:57264 PLF.Equiv <> l2:194 var
R57269:57270 PLF.Equiv <> a2:196 var
R57279:57281 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R57300:57302 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R57290:57291 PLF.Imp <> :com:com_scope:x_';'_x not
R57284:57287 PLF.Imp <> :com:com_scope:x_':='_x not
R57282:57283 PLF.Equiv <> l2:194 var
R57288:57289 PLF.Equiv <> a2:196 var
R57294:57297 PLF.Imp <> :com:com_scope:x_':='_x not
R57292:57293 PLF.Equiv <> l1:193 var
R57298:57299 PLF.Equiv <> a1:195 var
def 58220:58226 <> capprox
R58237:58239 PLF.Imp <> com ind
binder 58229:58230 <> c1:197
binder 58232:58233 <> c2:198
R58269:58273 PLF.Imp <> state def
binder 58260:58261 <> st:199
binder 58263:58265 <> st':200
R58295:58298 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58281:58284 PLF.Imp <> :::x_'=['_x_']=>'_x not
R58287:58291 PLF.Imp <> :::x_'=['_x_']=>'_x not
R58285:58286 PLF.Equiv <> c1:197 var
R58279:58280 PLF.Equiv <> st:199 var
R58292:58294 PLF.Equiv <> st':200 var
R58301:58304 PLF.Imp <> :::x_'=['_x_']=>'_x not
R58307:58311 PLF.Imp <> :::x_'=['_x_']=>'_x not
R58305:58306 PLF.Equiv <> c2:198 var
R58299:58300 PLF.Equiv <> st:199 var
R58312:58314 PLF.Equiv <> st':200 var
def 58727:58728 <> c3
R58732:58734 PLF.Imp <> com ind
def 58814:58815 <> c4
R58819:58821 PLF.Imp <> com ind
prf 58899:58913 <> c3_c4_different
R58932:58935 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R58917:58918 Coq.Init.Logic <> ::type_scope:'~'_x not
R58919:58925 PLF.Equiv <> capprox def
R58927:58928 PLF.Equiv <> c3 prfax
R58930:58931 PLF.Equiv <> c4 prfax
R58936:58937 Coq.Init.Logic <> ::type_scope:'~'_x not
R58938:58944 PLF.Equiv <> capprox def
R58946:58947 PLF.Equiv <> c4 prfax
R58949:58950 PLF.Equiv <> c3 prfax
def 59070:59073 <> cmin
R59077:59079 PLF.Imp <> com ind
prf 59157:59168 <> cmin_minimal
binder 59179:59179 <> c:201
R59182:59188 PLF.Equiv <> capprox def
R59190:59193 PLF.Equiv <> cmin prfax
R59195:59195 PLF.Equiv <> c:201 var
def 59372:59376 <> zprop
R59383:59385 PLF.Imp <> com ind
binder 59379:59379 <> c:202
prf 59471:59486 <> zprop_preserving
binder 59497:59497 <> c:203
binder 59499:59500 <> c':204
R59512:59515 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59505:59509 PLF.Equiv <> zprop prfax
R59511:59511 PLF.Equiv <> c:203 var
R59528:59531 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59516:59522 PLF.Equiv <> capprox def
R59524:59524 PLF.Equiv <> c:203 var
R59526:59527 PLF.Equiv <> c':204 var
R59532:59536 PLF.Equiv <> zprop prfax
R59538:59539 PLF.Equiv <> c':204 var
